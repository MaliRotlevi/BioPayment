[{"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js":"1","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js":"2","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js":"4","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js":"5","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js":"6","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js":"7","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js":"8","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js":"9","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js":"10","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\TravelsToUser.js":"11","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\HomePage.js":"12"},{"size":998,"mtime":1645707005295,"results":"13","hashOfConfig":"14"},{"size":974,"mtime":1645951631941,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":37,"mtime":1642009132588,"results":"17","hashOfConfig":"14"},{"size":2692,"mtime":1645708757667,"results":"18","hashOfConfig":"14"},{"size":5946,"mtime":1645720647756,"results":"19","hashOfConfig":"14"},{"size":3926,"mtime":1645959348421,"results":"20","hashOfConfig":"14"},{"size":717,"mtime":1645701138101,"results":"21","hashOfConfig":"14"},{"size":70,"mtime":1642007563020,"results":"22","hashOfConfig":"14"},{"size":1691,"mtime":1645719961676,"results":"23","hashOfConfig":"14"},{"size":2828,"mtime":1645954296214,"results":"24","hashOfConfig":"14"},{"size":2876,"mtime":1645958588229,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"8sve",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js",["57","58"],"import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {userReducer} from './store/reducers/index'\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst combine = combineReducers({user:userReducer});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combine, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n      {/* <BrowserRouter> */}\n        <App />\n        {/* </BrowserRouter> */}\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n",["59","60"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js",["61","62","63","64","65"],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Loading from './components/Loading';\nimport TravelToUser from './components/TravelsToUser';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (<>\n    <HomePage></HomePage> \n    {/* <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\"><Login></Login>\n      </div>\n    </div> \n    <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <Register></Register>\n      </div>\n    </div>*/}\n    {/* <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <Login></Login>\n      </div>\n    </div> */}\n    {/* \n      <br />\n      \n      <br />*/}\n      {/* <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n      <Loading></Loading>\n      </div>\n      </div> */}\n      {/* <br />\n    <TravelToUser></TravelToUser> */}\n  </> \n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js",["66","67","68","69","70","71","72","73"],"import React, { useState, Component } from \"react\";\r\nimport { logUser } from \"../store/action/user\";\r\nimport { connect } from \"react-redux\";\r\nimport {Button} from '@material-ui/core';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nconst Login = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [fingerPrint, setFingerPrint] = useState('');\r\n\r\n  const [goodUser, setGoodUser] = useState(false);\r\n\r\n\r\n  const inputRefUserName = React.createRef();\r\n  const inputRefPassword = React.createRef()\r\n  const inputRefFingerPrint = React.createRef()\r\n\r\n  // const updateInputs = () => {\r\n  const updateUserName = () => {\r\n    const inputTextUserName = inputRefUserName.current.value\r\n    setUserName(inputTextUserName);\r\n\r\n  }\r\n  const updatePassword = () => {\r\n    const inputTextPassword = inputRefPassword.current.value\r\n    setUserPassword(inputTextPassword);\r\n\r\n  }\r\n  //   const updateFingerPrint = () => {\r\n  //     const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n  //     setFingerPrint(inputTextFingerPrint);\r\n  //     console.log(inputTextFingerPrint);\r\n\r\n  //   }\r\n\r\n  //  }\r\n\r\n  const log = () => {\r\n    if (props.currentUser == null) {\r\n      setGoodUser(false);\r\n    }\r\n    else\r\n      setGoodUser(true);\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n  }\r\n  return (<>\r\n    <form onSubmit={handleSubmit}>        \r\n      <h1>Login</h1>\r\n      <div className=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" name=\"userName\" className=\"form-control\" placeholder=\"Enter user name...\" onChange={updateUserName} ref={inputRefUserName} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"password\" name=\"userPassword\" className=\"form-control\" placeholder=\"Enter password...\" onChange={updatePassword} ref={inputRefPassword} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label>FingerPrint</label>\r\n      <input type=\"text\" name=\"fingerPrint\" className=\"form-control\" placeholder=\"Enter finger print...\" ref={inputRefFingerPrint} defaultValue={props.currentUser.userName} />\r\n      </div>\r\n      <h1> </h1>\r\n      <Button color=\"primary\" variant=\"contained\" onClick={() => {\r\n        console.log(props.currentUser);\r\n        props.logUser({userName,userPassword});\r\n      }}>submit\r\n      </Button>\r\n    </form>\r\n \r\n  </>)\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{logUser})(Login);\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js",["74","75","76","77"],"import React, { useState, Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col, Row, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../store/action/user\";\r\nimport {postUser} from '../store/action/user'\r\nimport './Login.css';\r\nimport {Button} from '@material-ui/core';\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const [id, setUserId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const [profile, setProfile] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [isDriver, setIsDriver] = useState('');\r\n    const [fingerPrint, setFingerPrint] = useState('');\r\n\r\n\r\n    const inputRefUserId = React.createRef()\r\n    const inputRefFirstName = React.createRef()\r\n    const inputRefLastName = React.createRef()\r\n    const inputRefBirthDate = React.createRef()\r\n    const inputRefMail = React.createRef()\r\n    const inputRefPassword = React.createRef()\r\n    const inputRefUserName = React.createRef()\r\n    const inputRefIsDriver = React.createRef()\r\n    const inputRefFingerPrint = React.createRef()\r\n\r\n\r\n\r\n    const updateId = () => {\r\n        const inputTextUserId = inputRefUserId.current.value\r\n        setUserId(inputTextUserId);\r\n        setProfile(0);\r\n    }\r\n    const updateFirstName=()=>{\r\n        const inputTextFirstName = inputRefFirstName.current.value\r\n        setFirstName(inputTextFirstName);\r\n    }\r\n    const updateLastName=()=>{\r\n        const inputTextLastName = inputRefLastName.current.value\r\n        setLastName(inputTextLastName);\r\n    }\r\n    const updateBirthDate=()=>{ \r\n        const inputTextBirthDate = inputRefBirthDate.current.value\r\n        setBirthDate(inputTextBirthDate);\r\n    }\r\n// const updateMail=()=>{\r\n//         const inputTextMail = inputRefMail.current.value\r\n//         setMail(inputTextMail);\r\n// }\r\nconst updatePassword=()=>{\r\n        const inputTextPassword = inputRefPassword.current.value\r\n        setPassword(inputTextPassword);\r\n}\r\nconst updateUserName=()=>{\r\n        const inputTextUserName = inputRefUserName.current.value\r\n        setUserName(inputTextUserName);\r\n}\r\nconst updateIsDriver=()=>{\r\n        const inputTextIsDriver = inputRefIsDriver.current.value\r\n        setIsDriver(inputTextIsDriver);\r\n}\r\nconst updateFingerPrint=()=>{\r\n    const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n        setFingerPrint(inputTextFingerPrint);\r\n}\r\n    return (<>\r\n        <form >\r\n            <h1>Regist:</h1>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\"  >\r\n                    <label>id</label>\r\n                    <Form.Control type=\"text\" id=\"inp\" name=\"userId\" required placeholder=\"enter id...\" ref={inputRefUserId}  onKeyUp={updateId}/>\r\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\"  >\r\n                <label>first name</label>\r\n                    <Form.Control type=\"text\" id=\"inp\" name=\"firstName\" required placeholder=\"enter first name...\" ref={inputRefFirstName} onKeyUp={updateFirstName} />\r\n                    \r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\" >\r\n                <label>last name</label>\r\n                    <Form.Control type=\"text\" id=\"inp\" name=\"lastName\"  placeholder=\"enter last name...\" className=\"name-input\" ref={inputRefLastName}onKeyUp={updateLastName}  required />\r\n                </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <label>birth date</label>\r\n                    <Form.Control type=\"text\" id=\"inp\" name=\"birthDate\" placeholder=\"enter birth date...\" onKeyUp={updateBirthDate}  ref={inputRefBirthDate} />\r\n                </Form.Group>\r\n                {/* <Form.Group as={Col} md=\"4\" >\r\n                    <Form.Control type=\"text\" name=\"mail\" placeholder=\"enter email...\" ref={inputRefMail} onKeyUp={updateMail}  />\r\n                </Form.Group> */}\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <label>password</label>\r\n                    <Form.Control type=\"password\" id=\"inp\" name=\"password\" placeholder=\"enter password...\" ref={inputRefPassword} onKeyUp={updatePassword}  />\r\n                </Form.Group>\r\n\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <label>user name</label>\r\n                    <Form.Control type=\"text\" id=\"inp\" id=\"inp\" name=\"userName\" placeholder=\"enter user name...\" ref={inputRefUserName} onKeyUp={updateUserName}  />\r\n                </Form.Group>\r\n                <h1> </h1>\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <label>is driver?</label>\r\n                    <input type=\"checkbox\" name=\"isDriver\" ref={inputRefIsDriver} onKeyUp={updateIsDriver}  />\r\n                </Form.Group>\r\n                <h1> </h1>\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <label>finger print</label>\r\n                    <Form.Control type=\"text\" id=\"inp\" name=\"fingerPrint\" ref={inputRefFingerPrint} onKeyUp={updateFingerPrint}  />\r\n                </Form.Group>\r\n\r\n            </Row>\r\n            <Button  color=\"primary\" variant=\"contained\"\r\n            onClick={() => {\r\n            console.log(props.currentUser);\r\n            debugger\r\n            props.postUser({id,firstName,lastName,birthDate,userName,password,fingerPrint,profile,isDriver})}} >\r\n            Regist\r\n            </Button>\r\n        </form>\r\n\r\n    </>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.user.currentUser\r\n    }\r\n  }\r\n\r\n  export default connect(mapStateToProps,{postUser})(Register);\r\n  ","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js",["78","79","80","81","82","83","84"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js",["85"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    currentUser: {\r\n        userName: \"\",\r\n        userPassword: \"\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SAVE_USER:\r\n            {\r\n                console.log(\"inside the reduser\");\r\n                return { ...state, currentUser: action.payload }\r\n            }\r\n        case ActionTypes.ADD_USER:\r\n            {\r\n                \r\n                console.log(\"inside the reduser of add user\");\r\n                return {\r\n                    ...state, currentUser: action.payload\r\n                }\r\n            }\r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js",["86"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const postUser = (user) => {\r\n    debugger\r\n    return (dispatch) => {\r\n        debugger\r\n        console.log(\"inside the dispathhh\");\r\n        axios.post(`https://localhost:44321/api/user/addUser`, user)\r\n            .then(response => {\r\n                debugger\r\n                console.log(\"inside the response of register\");\r\n                console.log(response.data);\r\n                \r\n                dispatch(addUser(response.data));\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(\"inside the cath of the register\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\nexport const logUser = (user) => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/user/getUser?username=${user.userName}&password=${user.userPassword}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data == null || response.data == undefined) {\r\n\r\n                    alert(\"this user is not exist in the system\")\r\n                }\r\n                else {\r\n                    console.log(\"success\");\r\n                    dispatch(saveUser(response.data))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"inside the catch\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const saveUser = (user) => {\r\n    return {\r\n        type: ActionTypes.SAVE_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const addUser = (user) => {\r\n    \r\n    return {\r\n        type: ActionTypes.ADD_USER,\r\n        payload: user\r\n    }\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\TravelsToUser.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\HomePage.js",["87","88","89"],{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"90","severity":1,"message":"94","line":12,"column":10,"nodeType":"92","messageId":"93","endLine":12,"endColumn":23},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"90","severity":1,"message":"99","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"100","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"101","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":15},{"ruleId":"90","severity":1,"message":"103","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":20},{"ruleId":"90","severity":1,"message":"104","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"105","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":11},{"ruleId":"90","severity":1,"message":"106","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":17},{"ruleId":"90","severity":1,"message":"107","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":13},{"ruleId":"90","severity":1,"message":"108","line":13,"column":10,"nodeType":"92","messageId":"93","endLine":13,"endColumn":21},{"ruleId":"90","severity":1,"message":"109","line":13,"column":23,"nodeType":"92","messageId":"93","endLine":13,"endColumn":37},{"ruleId":"90","severity":1,"message":"110","line":15,"column":10,"nodeType":"92","messageId":"93","endLine":15,"endColumn":18},{"ruleId":"90","severity":1,"message":"111","line":42,"column":9,"nodeType":"92","messageId":"93","endLine":42,"endColumn":12},{"ruleId":"90","severity":1,"message":"104","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"112","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":17},{"ruleId":"90","severity":1,"message":"113","line":28,"column":11,"nodeType":"92","messageId":"93","endLine":28,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":109,"column":56,"nodeType":"116","messageId":"117","endLine":109,"endColumn":64},{"ruleId":"90","severity":1,"message":"118","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":15},{"ruleId":"90","severity":1,"message":"119","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"104","line":2,"column":27,"nodeType":"92","messageId":"93","endLine":2,"endColumn":36},{"ruleId":"90","severity":1,"message":"120","line":3,"column":16,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"121","line":3,"column":24,"nodeType":"92","messageId":"93","endLine":3,"endColumn":33},{"ruleId":"90","severity":1,"message":"122","line":3,"column":35,"nodeType":"92","messageId":"93","endLine":3,"endColumn":46},{"ruleId":"90","severity":1,"message":"123","line":3,"column":48,"nodeType":"92","messageId":"93","endLine":3,"endColumn":60},{"ruleId":"124","severity":1,"message":"125","line":14,"column":5,"nodeType":"126","messageId":"127","endLine":28,"endColumn":6},{"ruleId":"128","severity":1,"message":"129","line":29,"column":60,"nodeType":"130","messageId":"131","endLine":29,"endColumn":62},{"ruleId":"90","severity":1,"message":"120","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":16},{"ruleId":"90","severity":1,"message":"132","line":1,"column":31,"nodeType":"92","messageId":"93","endLine":1,"endColumn":38},{"ruleId":"90","severity":1,"message":"133","line":1,"column":53,"nodeType":"92","messageId":"93","endLine":1,"endColumn":61},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["134"],"no-negated-in-lhs",["135"],"'logo' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Loading' is defined but never used.","'TravelToUser' is defined but never used.","'Component' is defined but never used.","'Box' is defined but never used.","'TextField' is defined but never used.","'axios' is defined but never used.","'fingerPrint' is assigned a value but never used.","'setFingerPrint' is assigned a value but never used.","'goodUser' is assigned a value but never used.","'log' is assigned a value but never used.","'addUser' is defined but never used.","'inputRefMail' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Radio' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","no-global-assign","no-unsafe-negation"]