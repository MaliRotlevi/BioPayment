[{"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js":"1","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js":"2","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js":"4","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js":"5","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js":"6","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js":"7","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js":"8","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js":"9","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js":"10","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\TravelsToUser.js":"11","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\HomePage.js":"12","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Edit.js":"13","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Details.js":"14","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travelsToUser.js":"15","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travelsToUser.js":"16","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\profile.js":"17","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\profile.js":"18","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\fingerPrint.js":"19","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travels.js":"20","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travels.js":"21","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contracts.js":"22","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contractToUser.js":"23","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contracts.js":"24","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contractToUser.js":"25","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\windows_hello.js":"26"},{"size":1214,"mtime":1650748446486,"results":"27","hashOfConfig":"28"},{"size":478,"mtime":1650911196034,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":285,"mtime":1650748489957,"results":"31","hashOfConfig":"28"},{"size":3277,"mtime":1651077360464,"results":"32","hashOfConfig":"28"},{"size":6752,"mtime":1648740781431,"results":"33","hashOfConfig":"28"},{"size":5146,"mtime":1651236125701,"results":"34","hashOfConfig":"28"},{"size":1047,"mtime":1646596094216,"results":"35","hashOfConfig":"28"},{"size":554,"mtime":1651178530819,"results":"36","hashOfConfig":"28"},{"size":3104,"mtime":1651180522182,"results":"37","hashOfConfig":"28"},{"size":3056,"mtime":1650230492096,"results":"38","hashOfConfig":"28"},{"size":3476,"mtime":1646667309070,"results":"39","hashOfConfig":"28"},{"size":5591,"mtime":1651225727093,"results":"40","hashOfConfig":"28"},{"size":3313,"mtime":1651167449069,"results":"41","hashOfConfig":"28"},{"size":685,"mtime":1650149477056,"results":"42","hashOfConfig":"28"},{"size":360,"mtime":1650149494088,"results":"43","hashOfConfig":"28"},{"size":667,"mtime":1651178554726,"results":"44","hashOfConfig":"28"},{"size":1583,"mtime":1651184098981,"results":"45","hashOfConfig":"28"},{"size":662,"mtime":1648153047007,"results":"46","hashOfConfig":"28"},{"size":1032,"mtime":1650147892198,"results":"47","hashOfConfig":"28"},{"size":522,"mtime":1650147883520,"results":"48","hashOfConfig":"28"},{"size":734,"mtime":1650748131600,"results":"49","hashOfConfig":"28"},{"size":5043,"mtime":1651236187509,"results":"50","hashOfConfig":"28"},{"size":346,"mtime":1650747657955,"results":"51","hashOfConfig":"28"},{"size":857,"mtime":1650234299308,"results":"52","hashOfConfig":"28"},{"size":5013,"mtime":1650910866700,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"8sve",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"110","usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js",["121","122"],"import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {userReducer,travelsToUserReducer,profileReducer,contractToUserReducer,contractsReducer} from './store/reducers/index'\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst combine = combineReducers({user:userReducer,travelsToUser:travelsToUserReducer,profile:profileReducer,contractToUser:contractToUserReducer,contracts:contractsReducer});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combine, composeEnhancers(applyMiddleware(thunk)))\nwindow.store=store\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n      {/* <BrowserRouter> */}\n        <App />\n        {/* </BrowserRouter> */}\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n",["123","124"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js",["125","126","127","128","129","130"],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Loading from './components/Loading';\nimport TravelToUser from './components/TravelsToUser';\nimport HomePage from './components/HomePage';\nimport Windows_hello from './components/windows_hello'\n\nfunction App() {\n  return (<>\n    <HomePage></HomePage>     \n    {/* <Windows_hello></Windows_hello> */}\n  </> \n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js",["131","132","133","134","135"],"import React, { useState, Component } from \"react\";\r\nimport { logUser } from \"../store/action/user\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from '@material-ui/core';\r\nimport './Login.css';\r\nimport Divider from '@mui/material/Divider';\r\nimport { ifThereIsSensor} from '../store/action/fingerPrint'\r\n\r\n\r\nconst Login = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [fingerPrint, setFingerPrint] = useState('');\r\n\r\n  const [goodUser, setGoodUser] = useState(false);\r\n\r\n\r\n  const inputRefUserName = React.createRef();\r\n  const inputRefPassword = React.createRef()\r\n  const inputRefFingerPrint = React.createRef()\r\n\r\n  // const updateInputs = () => {\r\n  const updateUserName = () => {\r\n    const inputTextUserName = inputRefUserName.current.value\r\n    setUserName(inputTextUserName);\r\n\r\n  }\r\n  const updatePassword = () => {\r\n    const inputTextPassword = inputRefPassword.current.value\r\n    setUserPassword(inputTextPassword);\r\n\r\n  }\r\n  //   const updateFingerPrint = () => {\r\n  //     const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n  //     setFingerPrint(inputTextFingerPrint);\r\n  //     console.log(inputTextFingerPrint);\r\n\r\n  //   }\r\n\r\n  //  }\r\n\r\n  const log = () => {\r\n    if (props.currentUser == null) {\r\n      setGoodUser(false);\r\n    }\r\n    else\r\n      setGoodUser(true);\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n  }\r\n  return (<>\r\n    <form onSubmit={handleSubmit} id=\"frm\">\r\n      <h1>Login</h1>\r\n      <div className=\"form-group\">\r\n        <label>User Name</label>\r\n        <input type=\"text\" name=\"userName\" className=\"form-control\" placeholder=\"Enter user name...\" onChange={updateUserName} ref={inputRefUserName} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"userPassword\" className=\"form-control\" placeholder=\"Enter password...\" onChange={updatePassword} ref={inputRefPassword} />\r\n      </div>\r\n      <Divider>login with fingerPrint</Divider>\r\n      <div className=\"form-group\">\r\n        <label>FingerPrint</label>\r\n        <input type=\"text\" name=\"fingerPrint\" className=\"form-control\" placeholder=\"Enter finger print...\" ref={inputRefFingerPrint} defaultValue={props.currentUser.userName} />\r\n        <Button onClick={()=>{props.ifThereIsSensor()}}>identify your fingerPrint</Button>\r\n      </div>\r\n      <Divider>login with fingerPrint</Divider>\r\n      <div className=\"form-group\">\r\n        <label>React FingerPrint</label>\r\n        <input type=\"text\" name=\"fingerPrint\" className=\"form-control\" placeholder=\"Enter finger print...\" ref={inputRefFingerPrint} defaultValue={props.currentUser.userName} />\r\n        <Button onClick={()=>{props.ifThereIsSensor()}}>identify your fingerPrint</Button>\r\n      </div>\r\n      <h1> </h1>\r\n      <Button color=\"primary\" variant=\"contained\" onClick={() => {\r\n        props.logUser({ userName, userPassword });\r\n        console.log(props.currentUser)    \r\n      }}>Login\r\n      </Button>\r\n    </form>\r\n\r\n  </>)\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logUser,ifThereIsSensor })(Login);\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js",["136","137"],"import React, { useState } from \"react\";\r\nimport { Col, Row, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { postUser } from '../store/action/user'\r\nimport { Button } from '@material-ui/core';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport './Login.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Register = (props) => {\r\n\r\n    const [id, setId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const [profileCode, setProfile] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [isDriver, setIsDriver] = useState('');\r\n    const [fingerPrint, setFingerPrint] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n\r\n    const inputRefId = React.createRef()\r\n    const inputRefFirstName = React.createRef()\r\n    const inputRefLastName = React.createRef()\r\n    const inputRefBirthDate = React.createRef()\r\n    const inputRefProfile = React.createRef();\r\n    const inputRefPassword = React.createRef()\r\n    const inputRefUserName = React.createRef()\r\n    const inputRefIsDriver = React.createRef()\r\n    const inputRefFingerPrint = React.createRef()\r\n    const inputRefEmail = React.createRef()\r\n\r\n\r\n\r\n\r\n    const updateId = () => {\r\n        const inputTextId = inputRefId.current.value\r\n        setId(inputTextId);\r\n    }\r\n    const updateFirstName = () => {\r\n        const inputTextFirstName = inputRefFirstName.current.value\r\n        setFirstName(inputTextFirstName);\r\n    }\r\n    const updateLastName = () => {\r\n        const inputTextLastName = inputRefLastName.current.value\r\n        setLastName(inputTextLastName);\r\n    }\r\n    const updateBirthDate = () => {\r\n        const inputTextBirthDate = inputRefBirthDate.current.value\r\n        setBirthDate(inputTextBirthDate);\r\n    }\r\n    const updateProfie = () => {\r\n        const inputProfile = inputRefProfile.current.value;\r\n        setProfile(inputProfile);\r\n    }\r\n    const updatePassword = () => {\r\n        const inputTextPassword = inputRefPassword.current.value\r\n        setPassword(inputTextPassword);\r\n    }\r\n    const updateUserName = () => {\r\n        const inputTextUserName = inputRefUserName.current.value\r\n        setUserName(inputTextUserName);\r\n    }\r\n    const updateIsDriver = () => {\r\n        const inputTextIsDriver = inputRefIsDriver.current.value\r\n        setIsDriver(inputTextIsDriver);\r\n    }\r\n    const updateFingerPrint = () => {\r\n        const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n        setFingerPrint(inputTextFingerPrint);\r\n    }\r\n    const updateEmail = () => {\r\n        const inputTextEmail = inputRefEmail.current.value\r\n        setEmail(inputTextEmail);\r\n    }\r\n    return (<>\r\n        <Form>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} controlId=\"formGridId\">\r\n                    <Form.Label>id</Form.Label>\r\n                    <Form.Control ref={inputRefId} onKeyUp={updateId} placeholder=\"enter id...\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                    <Form.Label>first Name</Form.Label>\r\n                    <Form.Control ref={inputRefFirstName} onKeyUp={updateFirstName} placeholder=\"enter first name...\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                    <Form.Label>last Name</Form.Label>\r\n                    <Form.Control ref={inputRefLastName} onKeyUp={updateLastName} placeholder=\"enter last name...\" />\r\n                </Form.Group>\r\n\r\n\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control ref={inputRefEmail} onKeyUp={updateEmail} placeholder=\"enter email...\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridProfileCode\">\r\n                    <Form.Label>Profile</Form.Label>\r\n                    <Form.Control ref={inputRefProfile} onKeyUp={updateProfie} placeholder=\"enter profile...\" />\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        margin: 'auto',\r\n                        width: 400,\r\n                        flexWrap: 'wrap',\r\n                    }}>\r\n                        <input type=\"file\" accept=\"*.pdf\" style={{ display: 'none' }} id=\"contained-button-file\" />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload\r\n                            </Button>\r\n                        </label>\r\n                    </div>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridBirthDate\">\r\n                    <Form.Label>birthDate</Form.Label>\r\n                    <Form.Control ref={inputRefBirthDate} onKeyUp={updateBirthDate} placeholder=\"enter birthDate...\" />\r\n                </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n            <Form.Group as={Col} controlId=\"formGridUserName\">\r\n                    <Form.Label>User Name</Form.Label>\r\n                    <Form.Control ref={inputRefUserName} onKeyUp={updateUserName} placeholder=\"enter user name...\"/>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control ref={inputRefPassword} onKeyUp={updatePassword} placeholder=\"enter password...\"/>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridIsDriver\">\r\n                    <Form.Label>driver</Form.Label>\r\n                    <h1></h1>\r\n                    <FormControlLabel id=\"inp\" control={<Checkbox />}\r\n                        label=\"\"  ref={inputRefIsDriver}\r\n                        onKeyUp={updateIsDriver}  onChange={updateIsDriver}/>\r\n                </Form.Group>\r\n                </Row>\r\n            <Button color=\"primary\" variant=\"contained\" id=\"btnRegist\"\r\n                onClick={() => { props.postUser({ id, firstName, lastName, birthDate, userName, password, fingerPrint, profileCode, isDriver, email }) }}>\r\n                Regist\r\n            </Button>\r\n        </Form>\r\n\r\n    </>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { postUser })(Register);\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js",["138","139","140","141","142","143","144","145"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js",["146"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    currentUser: {\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        birthDate: \"\",\r\n        userName: \"\",\r\n        userPassword: \"\",\r\n        fingerPrint: \"\",\r\n        profileCode: 0,\r\n        isDriver: false,\r\n        email: \"\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SAVE_USER:\r\n            {\r\n                \r\n                return { ...state, currentUser: action.payload }\r\n\r\n            }\r\n        case ActionTypes.ADD_USER:\r\n            {\r\n\r\n                console.log(\"inside the reduser of add user\");\r\n                return {\r\n                    ...state, currentUser: action.payload\r\n                }\r\n            }\r\n        case ActionTypes.USER_UPDATE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    currentUser:action.payload\r\n                }\r\n            }\r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js",["147","148","149"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\TravelsToUser.js",["150","151","152"],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { connect } from 'react-redux'\r\nimport { getTravelsToUser } from '../store/action/travelsToUser';\r\n\r\nconst TravelsToUser = (props) => {\r\n\r\n\r\n    const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n        [`&.${tableCellClasses.head}`]: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        [`&.${tableCellClasses.body}`]: {\r\n            fontSize: 14,\r\n        },\r\n    }));\r\n\r\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        // hide last border\r\n        '&:last-child td, &:last-child th': {\r\n            border: 0,\r\n        },\r\n    }));\r\n\r\n    const findTravelByCode = (travelCode) => {\r\n        return props.travelsList.find((t) => {\r\n            return t.travelCode == travelCode\r\n        })\r\n    }\r\n\r\n    const formatDate = (string) => {\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(string).toLocaleDateString([], options);\r\n    }\r\n\r\n    return (<>\r\n        <h1>history</h1>\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Date & Time</StyledTableCell>\r\n                        <StyledTableCell >Line</StyledTableCell>\r\n                        <StyledTableCell >Price</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.travelsToUserList.map((row) => (\r\n                        <StyledTableRow key={row.date}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {formatDate(row.date)}\r\n                                {\"  \"}\r\n                                {row.hour}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>{row.line}</StyledTableCell>\r\n                            <StyledTableCell>{row.price}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    </>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        travelsToUserList: state.travelsToUser.travelsToUserList,\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTravelsToUser })(TravelsToUser);","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\HomePage.js",["153","154","155"],"import { Button, Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\r\nimport { Container } from \"reactstrap\";\r\nimport Loading from \"./Loading\";\r\nimport Register from \"./Register\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Login from './Login'\r\nimport Details from './Details'\r\nimport TravelsToUser from './TravelsToUser';\r\nimport './HomePage.css';\r\nimport Edit from './Edit';\r\nimport {logOutUser} from '../store/action/user';\r\nimport {connect} from 'react-redux';\r\n\r\nconst HomePage = (props) => {\r\n    return (<>\r\n        <div className='auth-wrapper'>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" id=\"nav1\" className=\"auth-inner\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">Bio-Payment</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n\r\n                            <Nav.Link><Link to=\"/Register\">register</Link></Nav.Link>\r\n                            <Nav.Link ><Link to=\"/Loading\">loading</Link></Nav.Link>\r\n                            <NavDropdown title=\"personal area\" id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item ><Link to=\"/Details\">details</Link></NavDropdown.Item>\r\n                                <NavDropdown.Item ><Link to=\"/TravelsToUser\">travels-history</Link></NavDropdown.Item>\r\n                                <NavDropdown.Item ><Link to=\"/Edit\" >Edit Details</Link></NavDropdown.Item>\r\n\r\n                                <NavDropdown.Divider />\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link href=\"exit\" onClick={()=>{props.logOutUser(null);\r\n                            console.log(\"exittt\")\r\n                            }}>exit</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n\r\n\r\n            <Routes className=\"auth-inner\">\r\n                <Route path=\"/\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Login /></div></div>} />\r\n                <Route path=\"/Register\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Register />\r\n                    </div></div>} />\r\n                <Route path=\"/Loading\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Loading /></div></div>} />\r\n                <Route path=\"/TravelsToUser\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><TravelsToUser /></div></div>} />\r\n                <Route path=\"/Details\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Details /></div></div>} />\r\n                <Route path=\"/Edit\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Edit />\r\n                    </div></div>} />\r\n                <Route exact path=\"\" element={<Login />} />\r\n            </Routes>\r\n            <div />\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.user.currentUser\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, { logOutUser })(HomePage);","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Edit.js",["156","157","158","159","160"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Details.js",["161","162","163","164","165","166","167","168","169","170"],"import React, { useState, Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col, Row, Form, Button, ListGroup, ListGroupItem, Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './Details.css';\r\nimport { getProfileName } from '../store/action/profile'\r\nimport { getcontractToUser } from '../store/action/contractToUser'\r\nimport { getcontracts } from '../store/action/contracts'\r\n\r\n\r\n\r\nconst Details = (props) => {\r\n\r\n  \r\n  const getcontractName = (codeC) => {\r\n    debugger\r\n    var x = props.contractsList.find((item) => item.contractCode == codeC)\r\n    return x.contractName;\r\n\r\n  }\r\n  const getcontractValue = (codeC) => {\r\n    debugger\r\n    var x = props.contractToUserList.find((item) => item.userId==(props.currentUser.id).substring(0,9) && item.contractCode==codeC)\r\n    \r\n    console.log(x.accumulatedAmount);\r\n    return x.accumulatedAmount;\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Details</h1>\r\n      <Form>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.firstName} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.lastName} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.email} />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} controlId=\"formGridProfile\">\r\n            <Form.Label>Profile</Form.Label>\r\n            <Form.Control disabled value={props.currentProfile.profileName} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.userName} />\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control value={props.currentUser.password} />\r\n          </Form.Group>\r\n        </Row>\r\n      </Form>\r\n\r\n      <h3>Your active contracts </h3>\r\n\r\n\r\n      <ListGroup as=\"ol\" numbered>\r\n        {props.contractToUserList.map((row) =>\r\n          <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\">\r\n            <div className=\"ms-2 me-auto\">\r\n              <div className=\"fw-bold\">{getcontractName(row.contractCode)}</div>\r\n              {getcontractValue(row.contractCode)}\r\n            </div>\r\n            <Badge variant=\"primary\" pill>\r\n              {getcontractValue(row.contractCode)}\r\n            </Badge>\r\n          </ListGroup.Item>\r\n        )}\r\n      </ListGroup>\r\n      <label></label>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n    currentProfile: state.profile.currentProfile,\r\n    contractToUserList: state.contractToUser.contractsToUser,\r\n    contractsList: state.contracts.travelContracts\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Details);\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travelsToUser.js",["171"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nexport const getTravelsToUser = (id) => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/travelsToUser/getAllTravelsToUser?id=${id}`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(saveTravelsToUser(response.data))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const saveTravelsToUser = (travelsToUserList) => {\r\n    return {\r\n        type: ActionTypes.TRAVELSTOUSER_SAVED,\r\n        payload: travelsToUserList\r\n    }\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travelsToUser.js",["172"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState={\r\n    travelsToUserList:[{}]\r\n}\r\n\r\nexport const travelsToUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.TRAVELSTOUSER_SAVED:\r\n            return { ...state, travelsToUserList: action.payload }\r\n        \r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\profile.js",["173","174"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\profile.js",["175"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\fingerPrint.js",["176","177"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nexport const ifThereIsSensor = () => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/fingerPrint/ifThereIsSensor`)\r\n            .then(response => {\r\n                if (response.data == true)\r\n                    swal(\"Yayyy\", \"there is sensor\", \"success\");\r\n                else\r\n                    swal(\"oops\", \"there isn't sensor\", \"error\")\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(\"inside the catch\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travels.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travels.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contracts.js",["178","179"],"import axios from \"axios\"\r\nimport * as ActionTypes from '../ActionTypes';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const getContracts = () => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/contracts/getAllcontracts`).\r\n            then(response => {\r\n                console.log(response.data);\r\n                console.log(\"insisde then contractss\")\r\n                dispatch(savecontracts(response.data))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                console.log(\"insisde catch contractss\")\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const savecontracts = (c) => {\r\n    return {\r\n        type: ActionTypes.contractS_SAVED,\r\n        payload: c\r\n    }\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contractToUser.js",["180","181"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contracts.js",["182"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    travelContracts: [{}]\r\n\r\n}\r\n\r\n\r\nexport const contractsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.contractS_SAVED:\r\n            return { ...state, travelContracts: action.payload } \r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contractToUser.js",["183"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    contractsToUser: [{}],\r\n    \r\n\r\n}\r\n\r\nexport const contractToUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.contract_TO_USER_SAVED:\r\n            return { ...state, contractsToUser: action.payload }\r\n        case ActionTypes.contract_ADDED:\r\n            return {\r\n                ...state,\r\n                 contractsToUser: [...state.contractsToUser, action.payload]\r\n            }\r\n        case ActionTypes.contract_UPDATE:\r\n            let arr2 = state.contractsToUser.filter((item) => item.id !== action.payload.id);\r\n            arr2.push(action.payload)\r\n            console.log(arr2)\r\n            return {\r\n                ...state,\r\n                contractsToUser: arr2\r\n            }\r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\windows_hello.js",[],{"ruleId":"184","severity":1,"message":"185","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":27},{"ruleId":"184","severity":1,"message":"188","line":12,"column":10,"nodeType":"186","messageId":"187","endLine":12,"endColumn":23},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"184","severity":1,"message":"193","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":12},{"ruleId":"184","severity":1,"message":"194","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":13},{"ruleId":"184","severity":1,"message":"195","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":16},{"ruleId":"184","severity":1,"message":"196","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"184","severity":1,"message":"197","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":20},{"ruleId":"184","severity":1,"message":"198","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":21},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"200","line":13,"column":10,"nodeType":"186","messageId":"187","endLine":13,"endColumn":21},{"ruleId":"184","severity":1,"message":"201","line":13,"column":23,"nodeType":"186","messageId":"187","endLine":13,"endColumn":37},{"ruleId":"184","severity":1,"message":"202","line":15,"column":10,"nodeType":"186","messageId":"187","endLine":15,"endColumn":18},{"ruleId":"184","severity":1,"message":"203","line":42,"column":9,"nodeType":"186","messageId":"187","endLine":42,"endColumn":12},{"ruleId":"184","severity":1,"message":"204","line":71,"column":11,"nodeType":"186","messageId":"187","endLine":71,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":135,"column":21,"nodeType":"207","endLine":135,"endColumn":25},{"ruleId":"184","severity":1,"message":"208","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"210","line":23,"column":9,"nodeType":"186","messageId":"211","endLine":23,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":43,"column":29,"nodeType":"214","messageId":"215","endLine":43,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":44,"column":30,"nodeType":"214","messageId":"215","endLine":44,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":44,"column":53,"nodeType":"214","messageId":"215","endLine":44,"endColumn":55},{"ruleId":"212","severity":1,"message":"213","line":44,"column":74,"nodeType":"214","messageId":"215","endLine":44,"endColumn":76},{"ruleId":"216","severity":1,"message":"217","line":96,"column":1,"nodeType":"218","messageId":"219","endLine":113,"endColumn":12},{"ruleId":"220","severity":1,"message":"221","line":22,"column":5,"nodeType":"222","messageId":"223","endLine":44,"endColumn":6},{"ruleId":"184","severity":1,"message":"224","line":8,"column":9,"nodeType":"186","messageId":"187","endLine":8,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":34,"column":60,"nodeType":"214","messageId":"215","endLine":34,"endColumn":62},{"ruleId":"225","severity":1,"message":"226","line":65,"column":71,"nodeType":"227","messageId":"228","endLine":65,"endColumn":72,"fix":"229"},{"ruleId":"184","severity":1,"message":"208","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":18},{"ruleId":"184","severity":1,"message":"230","line":37,"column":11,"nodeType":"186","messageId":"187","endLine":37,"endColumn":27},{"ruleId":"212","severity":1,"message":"213","line":39,"column":33,"nodeType":"214","messageId":"215","endLine":39,"endColumn":35},{"ruleId":"184","severity":1,"message":"231","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":16},{"ruleId":"184","severity":1,"message":"232","line":1,"column":31,"nodeType":"186","messageId":"187","endLine":1,"endColumn":38},{"ruleId":"184","severity":1,"message":"233","line":1,"column":53,"nodeType":"186","messageId":"187","endLine":1,"endColumn":61},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"234","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":47},{"ruleId":"184","severity":1,"message":"235","line":1,"column":49,"nodeType":"186","messageId":"187","endLine":1,"endColumn":55},{"ruleId":"184","severity":1,"message":"236","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":18},{"ruleId":"184","severity":1,"message":"237","line":30,"column":9,"nodeType":"186","messageId":"187","endLine":30,"endColumn":28},{"ruleId":"184","severity":1,"message":"208","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"231","line":3,"column":26,"nodeType":"186","messageId":"187","endLine":3,"endColumn":32},{"ruleId":"184","severity":1,"message":"238","line":3,"column":45,"nodeType":"186","messageId":"187","endLine":3,"endColumn":58},{"ruleId":"184","severity":1,"message":"239","line":6,"column":10,"nodeType":"186","messageId":"187","endLine":6,"endColumn":24},{"ruleId":"184","severity":1,"message":"240","line":7,"column":10,"nodeType":"186","messageId":"187","endLine":7,"endColumn":27},{"ruleId":"184","severity":1,"message":"241","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":22},{"ruleId":"212","severity":1,"message":"213","line":17,"column":66,"nodeType":"214","messageId":"215","endLine":17,"endColumn":68},{"ruleId":"212","severity":1,"message":"213","line":23,"column":64,"nodeType":"214","messageId":"215","endLine":23,"endColumn":66},{"ruleId":"212","severity":1,"message":"213","line":23,"column":124,"nodeType":"214","messageId":"215","endLine":23,"endColumn":126},{"ruleId":"184","severity":1,"message":"242","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":12},{"ruleId":"220","severity":1,"message":"221","line":9,"column":5,"nodeType":"222","messageId":"223","endLine":13,"endColumn":6},{"ruleId":"220","severity":1,"message":"221","line":11,"column":5,"nodeType":"222","messageId":"223","endLine":21,"endColumn":10},{"ruleId":"243","severity":1,"message":"244","line":20,"column":13,"nodeType":"245","messageId":"246","endLine":20,"endColumn":26},{"ruleId":"225","severity":1,"message":"226","line":39,"column":72,"nodeType":"227","messageId":"228","endLine":39,"endColumn":73,"fix":"247"},{"ruleId":"184","severity":1,"message":"248","line":1,"column":13,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},{"ruleId":"212","severity":1,"message":"213","line":9,"column":35,"nodeType":"214","messageId":"215","endLine":9,"endColumn":37},{"ruleId":"184","severity":1,"message":"242","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":12},{"ruleId":"225","severity":1,"message":"226","line":8,"column":75,"nodeType":"227","messageId":"228","endLine":8,"endColumn":76,"fix":"249"},{"ruleId":"184","severity":1,"message":"248","line":2,"column":13,"nodeType":"186","messageId":"187","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":42,"column":100,"nodeType":"227","messageId":"228","endLine":42,"endColumn":101,"fix":"250"},{"ruleId":"220","severity":1,"message":"221","line":11,"column":5,"nodeType":"222","messageId":"223","endLine":14,"endColumn":6},{"ruleId":"220","severity":1,"message":"221","line":11,"column":5,"nodeType":"222","messageId":"223","endLine":27,"endColumn":6},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["251"],"no-negated-in-lhs",["252"],"'logo' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Loading' is defined but never used.","'TravelToUser' is defined but never used.","'Windows_hello' is defined but never used.","'Component' is defined but never used.","'fingerPrint' is assigned a value but never used.","'setFingerPrint' is assigned a value but never used.","'goodUser' is assigned a value but never used.","'log' is assigned a value but never used.","'updateFingerPrint' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","no-const-assign","'moneyToAdd' is constant.","const","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getTravelsList' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"253","text":"254"},"'findTravelByCode' is assigned a value but never used.","'Button' is defined but never used.","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'InputLabel' is defined but never used.","'inputRefProfileCode' is assigned a value but never used.","'ListGroupItem' is defined but never used.","'getProfileName' is defined but never used.","'getcontractToUser' is defined but never used.","'getcontracts' is defined but never used.","'swal' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",{"range":"255","text":"254"},"'ActionTypes' is defined but never used.",{"range":"256","text":"254"},{"range":"257","text":"254"},"no-global-assign","no-unsafe-negation",[2252,2267],"\r\n            .",[1096,1111],[250,265],[1507,1522]]