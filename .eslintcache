[{"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js":"1","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js":"2","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js":"4","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js":"5","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js":"6","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js":"7","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js":"8","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js":"9","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js":"10"},{"size":885,"mtime":1642009284340,"results":"11","hashOfConfig":"12"},{"size":333,"mtime":1642434962425,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":37,"mtime":1642009132588,"results":"15","hashOfConfig":"12"},{"size":2296,"mtime":1644922155411,"results":"16","hashOfConfig":"12"},{"size":5317,"mtime":1645030441977,"results":"17","hashOfConfig":"12"},{"size":3015,"mtime":1642587687989,"results":"18","hashOfConfig":"12"},{"size":699,"mtime":1643555380027,"results":"19","hashOfConfig":"12"},{"size":70,"mtime":1642007563020,"results":"20","hashOfConfig":"12"},{"size":1549,"mtime":1643555204837,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"8sve",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js",["50"],"import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {userReducer} from './store/reducers/index'\n\nconst combine = combineReducers({user:userReducer});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combine, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n",["51","52"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js",["53"],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Loading from './components/Loading';\n\nfunction App() {\n  return (\n   <><Login></Login>\n   <br/>\n   <Register></Register>\n   <br/>\n   <Loading></Loading>\n\n   </>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js",["54","55","56","57","58","59","60"],"import React, { useState, Component } from \"react\";\r\nimport { logUser } from \"../store/action/user\";\r\nimport { connect } from \"react-redux\";\r\nimport {Button} from '@material-ui/core';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport axios from 'axios';\r\n\r\nconst Login = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [fingerPrint, setFingerPrint] = useState('');\r\n\r\n  const [goodUser, setGoodUser] = useState(false);\r\n\r\n\r\n  const inputRefUserName = React.createRef();\r\n  const inputRefPassword = React.createRef()\r\n  const inputRefFingerPrint = React.createRef()\r\n\r\n  // const updateInputs = () => {\r\n  const updateUserName = () => {\r\n    const inputTextUserName = inputRefUserName.current.value\r\n    setUserName(inputTextUserName);\r\n\r\n  }\r\n  const updatePassword = () => {\r\n    const inputTextPassword = inputRefPassword.current.value\r\n    setUserPassword(inputTextPassword);\r\n\r\n  }\r\n  //   const updateFingerPrint = () => {\r\n  //     const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n  //     setFingerPrint(inputTextFingerPrint);\r\n  //     console.log(inputTextFingerPrint);\r\n\r\n  //   }\r\n\r\n  //  }\r\n\r\n  const log = () => {\r\n    if (props.currentUser == null) {\r\n      setGoodUser(false);\r\n    }\r\n    else\r\n      setGoodUser(true);\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n  }\r\n  return (<>\r\n    <form onSubmit={handleSubmit}>\r\n      <h3></h3>\r\n      \r\n      <h1>התחברות</h1>\r\n      <Box><TextField>hihihihi</TextField></Box>\r\n      <input type=\"text\" name=\"userName\" onChange={updateUserName} ref={inputRefUserName} />\r\n      <input type=\"password\" name=\"userPassword\" onChange={updatePassword} ref={inputRefPassword} />\r\n      <input type=\"text\" name=\"fingerPrint\" ref={inputRefFingerPrint} value={props.currentUser.userName} />\r\n      <Button color=\"primary\" variant=\"contained\" onClick={() => {\r\n        console.log(props.currentUser);\r\n        props.logUser({userName,userPassword});\r\n      }}>submit\r\n      </Button>\r\n    </form>\r\n\r\n  </>)\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{logUser})(Login);\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js",["61","62","63"],"import React, { useState, Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col, Row, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../store/action/user\";\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const [userId, setUserId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const [profile, setProfile] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [isDriver, setIsDriver] = useState('');\r\n    const [fingerPrint, setFingerPrint] = useState('');\r\n\r\n\r\n    const inputRefUserId = React.createRef()\r\n    const inputRefFirstName = React.createRef()\r\n    const inputRefLastName = React.createRef()\r\n    const inputRefBirthDate = React.createRef()\r\n    const inputRefMail = React.createRef()\r\n    const inputRefPassword = React.createRef()\r\n    const inputRefUserName = React.createRef()\r\n    const inputRefIsDriver = React.createRef()\r\n    const inputRefFingerPrint = React.createRef()\r\n\r\n\r\n\r\n    const updateId = () => {\r\n        const inputTextUserId = inputRefUserId.current.value\r\n        setUserId(inputTextUserId);\r\n        setProfile(0);\r\n    }\r\n    const updateFirstName=()=>{\r\n        const inputTextFirstName = inputRefFirstName.current.value\r\n        setFirstName(inputTextFirstName);\r\n    }\r\n    const updateLastName=()=>{\r\n        const inputTextLastName = inputRefLastName.current.value\r\n        setLastName(inputTextLastName);\r\n    }\r\n    const updateBirthDate=()=>{ \r\n        const inputTextBirthDate = inputRefBirthDate.current.value\r\n        setBirthDate(inputTextBirthDate);\r\n    }\r\n// const updateMail=()=>{\r\n//         const inputTextMail = inputRefMail.current.value\r\n//         setMail(inputTextMail);\r\n// }\r\nconst updatePassword=()=>{\r\n        const inputTextPassword = inputRefPassword.current.value\r\n        setPassword(inputTextPassword);\r\n}\r\nconst updateUserName=()=>{\r\n        const inputTextUserName = inputRefUserName.current.value\r\n        setUserName(inputTextUserName);\r\n}\r\nconst updateIsDriver=()=>{\r\n        const inputTextIsDriver = inputRefIsDriver.current.value\r\n        setIsDriver(inputTextIsDriver);\r\n}\r\nconst updateFingerPrint=()=>{\r\n    const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n        setFingerPrint(inputTextFingerPrint);\r\n}\r\n        \r\n   \r\n\r\n    \r\n\r\n\r\n    return (<>\r\n        <form >\r\n            <h1>Regist:</h1>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\"  >\r\n                    <Form.Control type=\"text\" name=\"userId\" required placeholder=\"enter id...\" ref={inputRefUserId}  onKeyUp={updateId}/>\r\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\"  >\r\n                    <Form.Control type=\"text\" name=\"firstName\" required placeholder=\"enter first name...\" ref={inputRefFirstName} onKeyUp={updateFirstName} />\r\n                    \r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <Form.Control type=\"text\" name=\"lastName\"  placeholder=\"enter last name...\" className=\"name-input\" ref={inputRefLastName}onKeyUp={updateLastName}  required />\r\n                </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <Form.Control type=\"text\" name=\"birthDate\" placeholder=\"enter birth date...\" onKeyUp={updateBirthDate}  ref={inputRefBirthDate} />\r\n                </Form.Group>\r\n                {/* <Form.Group as={Col} md=\"4\" >\r\n                    <Form.Control type=\"text\" name=\"mail\" placeholder=\"enter email...\" ref={inputRefMail} onKeyUp={updateMail}  />\r\n                </Form.Group> */}\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"enter password...\" ref={inputRefPassword} placeholder=\"Password\" onKeyUp={updatePassword}  />\r\n                </Form.Group>\r\n\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <Form.Control type=\"text\" name=\"userName\" placeholder=\"enter user name...\" ref={inputRefUserName} onKeyUp={updateUserName}  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <input type=\"checkbox\" name=\"isDriver\" ref={inputRefIsDriver} onKeyUp={updateIsDriver}  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\" >\r\n                    <Form.Control type=\"text\" name=\"fingerPrint\" ref={inputRefFingerPrint} onKeyUp={updateFingerPrint}  />\r\n                </Form.Group>\r\n\r\n            </Row>\r\n            <button onClick={() => {\r\n            console.log(props.currentUser);\r\n            props.addUser({userId,firstName,lastName,birthDate,userName,password,fingerPrint,profile,isDriver})}} >\r\n            Regist</button>\r\n        </form>\r\n\r\n    </>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.user.currentUser\r\n    }\r\n  }\r\n\r\n  export default connect(mapStateToProps,{addUser})(Register);\r\n  ","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js",["64","65"],"import './Loading.css';\r\nimport React, { useState, Component } from \"react\";\r\n\r\n\r\nconst Loading = (props) => {\r\n\r\n    // openPaymentInput()\r\n    // {\r\n\r\n    // }\r\n    return (\r\n        <div> \r\n            <form action=\"\">\r\n               \r\n                <div class=\"row\">\r\n                    <div class=\"col-md-3\">\r\n                    <div class=\"btn btn-primary w-100\">30</div>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                    <div class=\"btn btn-primary w-100\">50</div>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                    <div class=\"btn btn-primary w-100\">100</div>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                    <div class=\"btn btn-primary w-100\" >other</div>\r\n                    </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                    <div class=\"col-3\">\r\n                    <div class=\"inputWithIcon\"> <input class=\"form-control\" id=\"in\" type=\"text\"  /> <span class=\"\"> </span> </div>\r\n                    </div>\r\n                    </div>\r\n                 \r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                    \r\n                        <div class=\"d-flex flex-column px-md-5 px-4 mb-4\"> <span>Credit Card</span>\r\n                            <div class=\"inputWithIcon\"> <input class=\"form-control\" type=\"text\"  /> <span class=\"\"> <img src=\"https://www.freepnglogos.com/uploads/mastercard-png/mastercard-logo-logok-15.png\" alt=\"\"/></span> </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"d-flex flex-column ps-md-5 px-md-0 px-4 mb-4\"> <span>Expiration<span class=\"ps-1\">Date</span></span>\r\n                            <div class=\"inputWithIcon\"> <input type=\"text\" class=\"form-control\"  /> <span class=\"fas fa-calendar-alt\"></span> </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"d-flex flex-column pe-md-5 px-md-0 px-4 mb-4\"> <span>Code CVV</span>\r\n                            <div class=\"inputWithIcon\"> <input type=\"password\" class=\"form-control\"  /> <span class=\"fas fa-lock\"></span> </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <div class=\"d-flex flex-column px-md-5 px-4 mb-4\"> <span>Name</span>\r\n                            <div class=\"inputWithIcon\"> <input class=\"form-control text-uppercase\" type=\"text\"  /> <span class=\"far fa-user\"></span> </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-12 px-md-5 px-4 mt-3\">\r\n                        <div class=\"btn btn-primary w-100\">Pay</div>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Loading;","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js",["66"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    currentUser: {\r\n        userName: \"\",\r\n        userPassword: \"\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SAVE_USER:\r\n            {\r\n                console.log(\"inside the reduser\");\r\n                return { ...state, currentUser: action.payload }\r\n            }\r\n        case ActionTypes.ADD_USER:\r\n            {\r\n                console.log(\"inside the reduser of add user\");\r\n                return {\r\n                    ...state, currentUser: action.payload\r\n                }\r\n            }\r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js",["67"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const postUser=(user)=>{\r\n    return(dispatch)=>{\r\n        console.log(\"inside the dispathhh\");\r\n        axios.post(`https://localhost:44321/api/user/addUser`,user)\r\n        .then(response=>{\r\n            console.log(\"inside the response of register\");\r\n            console.log(response.data);\r\n            dispatch(addUser(response.data));\r\n        }\r\n        )\r\n        .catch(error=>{\r\n            console.log(\"inside the cath of the register\");\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\nexport const logUser = (user) => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/user/getUser?username=${user.userName}&password=${user.userPassword}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data == null || response.data==undefined) {\r\n\r\n                    alert(\"this user is not exist in the system\")\r\n                }\r\n                else {\r\n                    console.log(\"success\");\r\n                    dispatch(saveUser(response.data))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"inside the catch\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const saveUser = (user) => {\r\n    return {\r\n        type: ActionTypes.SAVE_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const addUser=(user)=>{\r\n    return {\r\n        type:ActionTypes.ADD_USER,\r\n        payload:user\r\n    }\r\n}",{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":27},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"68","severity":1,"message":"76","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"77","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"78","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":13},{"ruleId":"68","severity":1,"message":"79","line":12,"column":10,"nodeType":"70","messageId":"71","endLine":12,"endColumn":21},{"ruleId":"68","severity":1,"message":"80","line":12,"column":23,"nodeType":"70","messageId":"71","endLine":12,"endColumn":37},{"ruleId":"68","severity":1,"message":"81","line":14,"column":10,"nodeType":"70","messageId":"71","endLine":14,"endColumn":18},{"ruleId":"68","severity":1,"message":"82","line":41,"column":9,"nodeType":"70","messageId":"71","endLine":41,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":54,"column":7,"nodeType":"85","endLine":54,"endColumn":11},{"ruleId":"68","severity":1,"message":"77","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"86","line":25,"column":11,"nodeType":"70","messageId":"71","endLine":25,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":100,"column":122,"nodeType":"89","messageId":"90","endLine":100,"endColumn":144},{"ruleId":"68","severity":1,"message":"91","line":2,"column":17,"nodeType":"70","messageId":"71","endLine":2,"endColumn":25},{"ruleId":"68","severity":1,"message":"77","line":2,"column":27,"nodeType":"70","messageId":"71","endLine":2,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":14,"column":5,"nodeType":"94","messageId":"95","endLine":27,"endColumn":6},{"ruleId":"96","severity":1,"message":"97","line":25,"column":59,"nodeType":"98","messageId":"99","endLine":25,"endColumn":61},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'logo' is defined but never used.","'Component' is defined but never used.","'axios' is defined but never used.","'fingerPrint' is assigned a value but never used.","'setFingerPrint' is assigned a value but never used.","'goodUser' is assigned a value but never used.","'log' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'inputRefMail' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]