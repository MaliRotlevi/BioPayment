[{"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js":"1","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js":"2","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js":"4","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js":"5","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js":"6","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js":"7","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js":"8","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js":"9","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js":"10","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\TravelsToUser.js":"11","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\HomePage.js":"12","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Edit.js":"13","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Details.js":"14","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travelsToUser.js":"15","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travelsToUser.js":"16","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\profile.js":"17","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\profile.js":"18","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\fingerPrint.js":"19","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travels.js":"20","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travels.js":"21","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contracts.js":"22","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contractToUser.js":"23","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contracts.js":"24","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contractToUser.js":"25","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\windows_hello.js":"26","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\aa.js":"27"},{"size":1214,"mtime":1650748446486,"results":"28","hashOfConfig":"29"},{"size":570,"mtime":1651606951486,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":285,"mtime":1650748489957,"results":"32","hashOfConfig":"29"},{"size":2893,"mtime":1651589582513,"results":"33","hashOfConfig":"29"},{"size":7673,"mtime":1651614405033,"results":"34","hashOfConfig":"29"},{"size":6101,"mtime":1651642214713,"results":"35","hashOfConfig":"29"},{"size":1079,"mtime":1651613598752,"results":"36","hashOfConfig":"29"},{"size":554,"mtime":1651178530819,"results":"37","hashOfConfig":"29"},{"size":3088,"mtime":1651520077382,"results":"38","hashOfConfig":"29"},{"size":3059,"mtime":1651615559687,"results":"39","hashOfConfig":"29"},{"size":3543,"mtime":1651613732001,"results":"40","hashOfConfig":"29"},{"size":6057,"mtime":1651614147566,"results":"41","hashOfConfig":"29"},{"size":3537,"mtime":1651615512594,"results":"42","hashOfConfig":"29"},{"size":695,"mtime":1651524424783,"results":"43","hashOfConfig":"29"},{"size":360,"mtime":1650149494088,"results":"44","hashOfConfig":"29"},{"size":667,"mtime":1651178554726,"results":"45","hashOfConfig":"29"},{"size":1575,"mtime":1651520079218,"results":"46","hashOfConfig":"29"},{"size":662,"mtime":1648153047007,"results":"47","hashOfConfig":"29"},{"size":1032,"mtime":1650147892198,"results":"48","hashOfConfig":"29"},{"size":522,"mtime":1650147883520,"results":"49","hashOfConfig":"29"},{"size":734,"mtime":1650748131600,"results":"50","hashOfConfig":"29"},{"size":5058,"mtime":1651615763983,"results":"51","hashOfConfig":"29"},{"size":346,"mtime":1650747657955,"results":"52","hashOfConfig":"29"},{"size":857,"mtime":1651597782545,"results":"53","hashOfConfig":"29"},{"size":5050,"mtime":1651433074909,"results":"54","hashOfConfig":"29"},{"size":3535,"mtime":1651606694588,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"8sve",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"106","usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119","usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"59"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"59"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"59"},"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\index.js",["131","132"],"import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {userReducer,travelsToUserReducer,profileReducer,contractToUserReducer,contractsReducer} from './store/reducers/index'\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst combine = combineReducers({user:userReducer,travelsToUser:travelsToUserReducer,profile:profileReducer,contractToUser:contractToUserReducer,contracts:contractsReducer});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combine, composeEnhancers(applyMiddleware(thunk)))\nwindow.store=store\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n      {/* <BrowserRouter> */}\n        <App />\n        {/* </BrowserRouter> */}\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n",["133","134"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\App.js",["135","136","137","138","139","140","141"],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Loading from './components/Loading';\nimport TravelToUser from './components/TravelsToUser';\nimport HomePage from './components/HomePage';\nimport Windows_hello from './components/windows_hello'\nimport CustomizedMenus from './components/aa'\n\nfunction App() {\n  return (<>\n  {/* <CustomizedMenus></CustomizedMenus> */}\n    <HomePage></HomePage>     \n    {/* <Windows_hello></Windows_hello> */}\n  </> \n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Login.js",["142","143","144","145","146"],"import React, { useState, Component } from \"react\";\r\nimport { logUser } from \"../store/action/user\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from '@material-ui/core';\r\nimport './Login.css';\r\nimport Divider from '@mui/material/Divider';\r\nimport { ifThereIsSensor} from '../store/action/fingerPrint'\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst Login = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [fingerPrint, setFingerPrint] = useState('');\r\n\r\n  const [goodUser, setGoodUser] = useState(false);\r\n\r\n\r\n  const inputRefUserName = React.createRef();\r\n  const inputRefPassword = React.createRef()\r\n  const inputRefFingerPrint = React.createRef()\r\n\r\n  // const updateInputs = () => {\r\n  const updateUserName = () => {\r\n    const inputTextUserName = inputRefUserName.current.value\r\n    setUserName(inputTextUserName);\r\n\r\n  }\r\n  const updatePassword = () => {\r\n    const inputTextPassword = inputRefPassword.current.value\r\n    setUserPassword(inputTextPassword);\r\n\r\n  }\r\n  //   const updateFingerPrint = () => {\r\n  //     const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n  //     setFingerPrint(inputTextFingerPrint);\r\n  //     console.log(inputTextFingerPrint);\r\n\r\n  //   }\r\n\r\n  //  }\r\n\r\n  const log = () => {\r\n    if (props.currentUser == null) {\r\n      setGoodUser(false);\r\n    }\r\n    else\r\n      setGoodUser(true);\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n  }\r\n  return (<>\r\n    <form onSubmit={handleSubmit} id=\"frm\">\r\n      <h1>Login</h1>\r\n      <div className=\"form-group\">\r\n        <label>User Name</label>\r\n        <input type=\"text\" name=\"userName\" className=\"form-control\" placeholder=\"Enter user name...\" onChange={updateUserName} ref={inputRefUserName} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"userPassword\" className=\"form-control\" placeholder=\"Enter password...\" onChange={updatePassword} ref={inputRefPassword} />\r\n      </div>\r\n      <Divider>login with fingerPrint</Divider>\r\n      <div className=\"form-group\">\r\n        <label>FingerPrint</label>\r\n        <input type=\"text\" name=\"fingerPrint\" className=\"form-control\" placeholder=\"Enter finger print...\" ref={inputRefFingerPrint}/>\r\n        <Button onClick={()=>{swal(\"ho no\",\"There is problem with the identifier\",'error')}}>identify fingerPrint</Button>\r\n      </div>\r\n     \r\n      <h1> </h1>\r\n      <Button color=\"primary\" variant=\"contained\" onClick={() => {\r\n        props.logUser({ userName, userPassword });\r\n        console.log(props.currentUser)    \r\n      }}>Login\r\n      </Button>\r\n    </form>\r\n\r\n  </>)\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logUser,ifThereIsSensor })(Login);\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Register.js",["147","148","149","150","151"],"import React, { useState } from \"react\";\r\nimport { Col, Row, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { postUser } from '../store/action/user'\r\nimport { Button } from '@material-ui/core';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport validator from 'validator';\r\nimport './Login.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport isEmail from 'validator/lib/isEmail';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const [id, setId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const [profileCode, setProfile] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [isDriver, setIsDriver] = useState('');\r\n    const [fingerPrint, setFingerPrint] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    let [emailError, setEmailError] = useState(\"\");\r\n\r\n\r\n\r\n    const inputRefId = React.createRef()\r\n    const inputRefFirstName = React.createRef()\r\n    const inputRefLastName = React.createRef()\r\n    const inputRefBirthDate = React.createRef()\r\n    const inputRefProfile = React.createRef();\r\n    const inputRefPassword = React.createRef()\r\n    const inputRefUserName = React.createRef()\r\n    const inputRefIsDriver = React.createRef()\r\n    const inputRefFingerPrint = React.createRef()\r\n    const inputRefEmail = React.createRef()\r\n\r\n\r\n    let validateEmail = () => {\r\n        setEmail(inputRefEmail.current.value);\r\n        //console.log(email);\r\n        if (validator.isEmail(email)) {\r\n            setEmailError('Valid Email :)');\r\n        } else {\r\n            setEmailError('Enter valid Email!');\r\n        }\r\n        //console.log(email);\r\n\r\n    }\r\n\r\n    const updateId = () => {\r\n        const inputTextId = inputRefId.current.value\r\n        setId(inputTextId);\r\n    }\r\n    const updateFirstName = () => {\r\n        const inputTextFirstName = inputRefFirstName.current.value\r\n        setFirstName(inputTextFirstName);\r\n    }\r\n    const updateLastName = () => {\r\n        const inputTextLastName = inputRefLastName.current.value\r\n        setLastName(inputTextLastName);\r\n    }\r\n    const updateBirthDate = () => {\r\n        const inputTextBirthDate = inputRefBirthDate.current.value\r\n        setBirthDate(inputTextBirthDate);\r\n    }\r\n    const updateProfie = (c) => {\r\n        const inputProfile = c;\r\n        setProfile(inputProfile);\r\n    }\r\n    const updatePassword = () => {\r\n        const inputTextPassword = inputRefPassword.current.value\r\n        setPassword(inputTextPassword);\r\n    }\r\n    const updateUserName = () => {\r\n        const inputTextUserName = inputRefUserName.current.value\r\n        setUserName(inputTextUserName);\r\n    }\r\n    const updateIsDriver = () => {\r\n        const inputTextIsDriver = inputRefIsDriver.current.value\r\n        setIsDriver(inputTextIsDriver);\r\n    }\r\n    const updateFingerPrint = () => {\r\n        const inputTextFingerPrint = inputRefFingerPrint.current.value\r\n        setFingerPrint(inputTextFingerPrint);\r\n    }\r\n    const updateEmail = () => {\r\n        const inputTextEmail = inputRefEmail.current.value\r\n        setEmail(inputTextEmail);\r\n    }\r\n    return (<>\r\n        <Form>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} controlId=\"formGridId\">\r\n                    <Form.Label>id</Form.Label>\r\n                    <Form.Control ref={inputRefId} onKeyUp={updateId} placeholder=\"enter id...\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                    <Form.Label>first Name</Form.Label>\r\n                    <Form.Control ref={inputRefFirstName} onKeyUp={updateFirstName} placeholder=\"enter first name...\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                    <Form.Label>last Name</Form.Label>\r\n                    <Form.Control ref={inputRefLastName} onKeyUp={updateLastName} placeholder=\"enter last name...\" />\r\n                </Form.Group>\r\n\r\n\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control ref={inputRefEmail} onKeyUp={() => {\r\n                        updateEmail();\r\n                        validateEmail();\r\n                    }} placeholder=\"enter email...\" />\r\n                    <p>{emailError}</p>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridProfile\">\r\n                    <FormControl>\r\n                        <Form.Label>Profiles:</Form.Label>\r\n                        <RadioGroup\r\n                            row\r\n                            aria-labelledby=\"demo-form-control-label-placement\"\r\n                            name=\"position\"\r\n                            defaultValue=\"top\"\r\n                        >\r\n                            <FormControlLabel value=\"student\" control={<Radio />} label=\"student\" onChange={() => { updateProfie(1) }} />\r\n                            <FormControlLabel value=\"young\" control={<Radio />} label=\"young\" onChange={() => { updateProfie(2) }} />\r\n                            <FormControlLabel value=\"adult\" control={<Radio />} label=\"adult\" onChange={() => { updateProfie(3) }} />\r\n                            <FormControlLabel value=\"elderly\" control={<Radio />} label=\"elderly\" onChange={() => { updateProfie(4) }} />\r\n                        </RadioGroup>\r\n                        <input type=\"file\" accept=\"*.pdf\" style={{ display: 'none' }} id=\"contained-button-file\" />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload File\r\n                            </Button>\r\n                        </label>\r\n                    </FormControl>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridBirthDate\">\r\n                    <Form.Label>birthDate</Form.Label>\r\n                    <Form.Control ref={inputRefBirthDate} onKeyUp={updateBirthDate} placeholder=\"enter birthDate...\" />\r\n                </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} controlId=\"formGridUserName\">\r\n                    <Form.Label>User Name</Form.Label>\r\n                    <Form.Control ref={inputRefUserName} onKeyUp={updateUserName} placeholder=\"enter user name...\" />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control ref={inputRefPassword} onKeyUp={updatePassword} placeholder=\"enter password...\" />\r\n                </Form.Group>\r\n                \r\n            </Row>\r\n            <Button color=\"primary\" variant=\"contained\" id=\"btnRegist\"\r\n                onClick={() => { props.postUser({ id, firstName, lastName, birthDate, userName, password, fingerPrint, profileCode, isDriver, email }) }}>\r\n                Regist\r\n            </Button>\r\n        </Form >\r\n\r\n    </>)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { postUser })(Register);\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Loading.js",["152","153","154","155","156","157","158","159","160","161"],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\user.js",["162","163"],"import swal from 'sweetalert';\r\nimport * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    currentUser: {\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        birthDate: \"\",\r\n        userName: \"\",\r\n        userPassword: \"\",\r\n        fingerPrint: \"\",\r\n        profileCode: 0,\r\n        isDriver: false,\r\n        email: \"\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SAVE_USER:\r\n            {\r\n                return { ...state, currentUser: action.payload }\r\n                \r\n\r\n            }\r\n        case ActionTypes.ADD_USER:\r\n            {\r\n\r\n                console.log(\"inside the reduser of add user\");\r\n                return {\r\n                    ...state, currentUser: action.payload\r\n                }\r\n            }\r\n        case ActionTypes.USER_UPDATE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    currentUser:action.payload\r\n                }\r\n            }\r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\ActionTypes.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\user.js",["164","165","166"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { getTravelsToUser } from './travelsToUser'\r\nimport { getProfileName,getAllProfiles } from './profile';\r\nimport { getContracts } from './contracts';\r\nimport { getContractToUser } from './contractToUser';\r\nimport {getTravelsList} from './travels'\r\n\r\nexport const postUser = (user) => {\r\n\r\n    return (dispatch) => {\r\n        axios.post(`https://localhost:44321/api/user/addUser`, user)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(addUser(response.data));\r\n\r\n                swal(\"BARUCH HASHEM!\", \"Your details have been saved in the system\", \"success\");\r\n\r\n\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(\"inside the cath of the register\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\nexport const logUser = (user) => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/user/getUser?username=${user.userName}&password=${user.userPassword}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data == null || response.data == undefined) {\r\n\r\n                    swal(\"Ho no...\", \"The user name or the password are wrong\", \"error\");\r\n                }\r\n                else {\r\n                    console.log(response.data);\r\n                    dispatch(saveUser(response.data))\r\n                    dispatch(getTravelsToUser(response.data.id))\r\n                    dispatch(getProfileName(response.data.profileCode))\r\n                    dispatch(getContractToUser(response.data.id))\r\n                    dispatch(getContracts());\r\n                    dispatch(getAllProfiles());\r\n                \r\n                    swal(\"Good job!\", \"you logged in!\", \"success\");\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"inside the catch\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const updetaUser = (user) => {\r\n    \r\n    return (dispatch) => {\r\n        console.log(user);\r\n        axios.put('https://localhost:44321/api/user/updateUser', user).\r\n            then(response => {\r\n                \r\n                console.log(response);\r\n                dispatch(update(response.data))\r\n                swal(\"it's updated\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                swal(\"oops... there is problem with the update!!\")\r\n\r\n            })\r\n    }\r\n}\r\nexport const saveUser = (user) => {\r\n    return {\r\n        type: ActionTypes.SAVE_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const update = (user) => {\r\n    return {\r\n        type: ActionTypes.USER_UPDATE,\r\n        payload: user\r\n    }\r\n}\r\nexport const addUser = (user) => {\r\n\r\n    return {\r\n        type: ActionTypes.ADD_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const logOutUser = (user) => {\r\n    return {\r\n        type: ActionTypes.SAVE_USER,\r\n        payload: user\r\n    }\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\TravelsToUser.js",["167","168","169"],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { connect } from 'react-redux'\r\nimport { getTravelsToUser } from '../store/action/travelsToUser';\r\n\r\nconst TravelsToUser = (props) => {\r\n\r\n\r\n    const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n        [`&.${tableCellClasses.head}`]: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        [`&.${tableCellClasses.body}`]: {\r\n            fontSize: 14,\r\n        },\r\n    }));\r\n\r\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        // hide last border\r\n        '&:last-child td, &:last-child th': {\r\n            border: 0,\r\n        },\r\n    }));\r\n\r\n    const findTravelByCode = (travelCode) => {\r\n        return props.travelsList.find((t) => {\r\n            return t.travelCode == travelCode\r\n        })\r\n    }\r\n\r\n    const formatDate = (string) => {\r\n        var options = { year: 'numeric', month: 'numeric', day: 'numeric' };\r\n        return new Date(string).toLocaleDateString([], options);\r\n    }\r\n\r\n    return (<>\r\n        <h1>history</h1>\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Date & Time</StyledTableCell>\r\n                        <StyledTableCell >Line</StyledTableCell>\r\n                        <StyledTableCell >Price</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.travelsToUserList.map((row) => (\r\n                        <StyledTableRow key={row.date}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {formatDate(row.date)}\r\n                                {\"  \"}\r\n                                {row.hour}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>{row.line}</StyledTableCell>\r\n                            <StyledTableCell>{row.price}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    </>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        travelsToUserList: state.travelsToUser.travelsToUserList,\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTravelsToUser })(TravelsToUser);","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\HomePage.js",["170","171","172"],"import { Button, Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\r\nimport { Container } from \"reactstrap\";\r\nimport Loading from \"./Loading\";\r\nimport Register from \"./Register\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Login from './Login'\r\nimport Details from './Details'\r\nimport TravelsToUser from './TravelsToUser';\r\nimport './HomePage.css';\r\nimport Edit from './Edit';\r\nimport {logOutUser} from '../store/action/user';\r\nimport {connect} from 'react-redux';\r\nimport swal from 'sweetalert';\r\n\r\nconst HomePage = (props) => {\r\n    return (<>\r\n        <div className='auth-wrapper'>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" id=\"nav1\" className=\"auth-inner\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">Bio-Payment</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n\r\n                            <Nav.Link><Link to=\"/Register\">register</Link></Nav.Link>\r\n                            <Nav.Link ><Link to=\"/Loading\">loading</Link></Nav.Link>\r\n                            <NavDropdown title=\"personal area\" id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item ><Link to=\"/Details\">details</Link></NavDropdown.Item>\r\n                                <NavDropdown.Item ><Link to=\"/TravelsToUser\">travels-history</Link></NavDropdown.Item>\r\n                                <NavDropdown.Item ><Link to=\"/Edit\" >Edit Details</Link></NavDropdown.Item>\r\n\r\n                                <NavDropdown.Divider />\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link href=\"exit\" onClick={()=>{props.logOutUser(null);\r\n                            swal(\"bye bye\",\"you logged out successfully\",'success');\r\n                            }}>exit</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n\r\n\r\n            <Routes className=\"auth-inner\">\r\n                <Route path=\"/\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Login /></div></div>} />\r\n                <Route path=\"/Register\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Register />\r\n                    </div></div>} />\r\n                <Route path=\"/Loading\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Loading /></div></div>} />\r\n                <Route path=\"/TravelsToUser\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><TravelsToUser /></div></div>} />\r\n                <Route path=\"/Details\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Details /></div></div>} />\r\n                <Route path=\"/Edit\" element={<div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\"><Edit />\r\n                    </div></div>} />\r\n                <Route exact path=\"\" element={<Login />} />\r\n            </Routes>\r\n            <div />\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.user.currentUser\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, { logOutUser })(HomePage);","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Edit.js",["173","174","175","176","177","178","179","180","181","182","183","184"],"import React, { useState, Component, useEffect, useRef } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col, Row, Form } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport { updetaUser } from '../store/action/user'\r\nimport './Details.css';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { ComboBox, Item, Section } from '@adobe/react-spectrum'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\n\r\n\r\n\r\n\r\nconst Edit = (props) => {\r\n  const [firstName, setFirstName] = useState(props.currentUser.firstName);\r\n  const [lastName, setLastName] = useState(props.currentUser.lastName);\r\n  const [profileCode, setProfileCode] = useState(props.currentUser.profileCode);\r\n  const [password, setPassword] = useState(props.currentUser.password);\r\n  const [userName, setUserName] = useState(props.currentUser.userName);\r\n  const [email, setEmail] = useState(props.currentUser.email);\r\n\r\n  const inputRefFirstName = React.createRef()\r\n  const inputRefLastName = React.createRef()\r\n  const inputRefEmail = React.createRef()\r\n  const inputRefPassword = React.createRef()\r\n  const inputRefUserName = React.createRef()\r\n  const inputRefProfileCode = React.createRef()\r\n\r\n\r\n  // let [majorId, setMajorId] = React.useState();\r\n\r\n\r\n\r\n\r\n\r\n  const updateFirstName = () => {\r\n    const inputTextFirstName = inputRefFirstName.current.value\r\n    setFirstName(inputTextFirstName);\r\n  }\r\n  const updateLastName = () => {\r\n    const inputTextLastName = inputRefLastName.current.value\r\n    // setLastName(inputTextLastName);\r\n    setLastName(inputTextLastName);\r\n  }\r\n\r\n  const updateEmail = () => {\r\n    const inputTextEmail = inputRefEmail.current.value\r\n    setEmail(inputTextEmail);\r\n  }\r\n  const updatePassword = () => {\r\n    const inputTextPassword = inputRefPassword.current.value\r\n    setPassword(inputTextPassword);\r\n  }\r\n  const updateUserName = () => {\r\n    const inputTextUserName = inputRefUserName.current.value\r\n    setUserName(inputTextUserName);\r\n  }\r\n  const updateProfileCode = (code) => {\r\n    const inputTextProfileCode = code\r\n    setProfileCode(inputTextProfileCode);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Edit Details</h1>\r\n      <Form>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} controlId=\"formGridName\">\r\n            <Form.Label>first Name</Form.Label>\r\n            <Form.Control defaultValue={props.currentUser.firstName} ref={inputRefFirstName} onKeyUp={updateFirstName} pattern=\"[^\\s]+\" />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formGridName\">\r\n            <Form.Label>last Name</Form.Label>\r\n            <Form.Control defaultValue={props.currentUser.lastName} ref={inputRefLastName} onKeyUp={updateLastName} pattern=\"[^\\s]+\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control defaultValue={props.currentUser.email} ref={inputRefEmail} onKeyUp={updateEmail} pattern=\"[^\\s]+\" />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n\r\n\r\n          <Form.Group as={Col} controlId=\"formGridUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control defaultValue={props.currentUser.userName} ref={inputRefUserName} onKeyUp={updateUserName} pattern=\"[^\\s]+\" />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control defaultValue={props.currentUser.password} ref={inputRefPassword} onKeyUp={updatePassword} pattern=\"[^\\s]+\" />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formGridProfile\">\r\n            <FormControl>\r\n              <Form.Label>Profiles:</Form.Label>\r\n              <label>{props.currentProfile.profileName}</label>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-form-control-label-placement\"\r\n                name=\"position\"\r\n                defaultValue=\"top\"\r\n              >\r\n                <FormControlLabel value=\"student\" control={<Radio />} label=\"student\" onChange={() => { updateProfileCode(1) }} />\r\n                <FormControlLabel value=\"young\" control={<Radio />} label=\"young\" onChange={() => { updateProfileCode(2) }} />\r\n                <br />\r\n                <FormControlLabel value=\"adult\" control={<Radio />} label=\"adult\" onChange={() => { updateProfileCode(3) }} />\r\n                <FormControlLabel value=\"elderly\" control={<Radio />} label=\"elderly\" onChange={() => { updateProfileCode(4) }} />\r\n              </RadioGroup>\r\n              <input type=\"file\" accept=\"*.pdf\" style={{ display: 'none' }} id=\"contained-button-file\" />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Upload File\r\n                </Button>\r\n              </label>\r\n            </FormControl>\r\n          </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n        </Row>\r\n        <Button color=\"primary\" variant=\"contained\" id=\"btnRegist\"\r\n          onClick={() => { props.updetaUser({ id: props.currentUser.id, firstName, lastName, birthDate: props.currentUser.birthDate, userName, password, fingerPrint: props.currentUser.fingerPrint, profileCode, isDriver: props.currentUser.isDriver, email }) }}>\r\n          Save Changes\r\n        </Button>\r\n\r\n\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n    currentProfile: state.profile.currentProfile,\r\n    profilesList: state.profile.profiles\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { updetaUser })(Edit);\r\n\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\Details.js",["185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React, { useState, Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col, Row, Form, Button, ListGroup, ListGroupItem, Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './Details.css';\r\nimport { getProfileName } from '../store/action/profile'\r\nimport { getcontractToUser } from '../store/action/contractToUser'\r\nimport { getcontracts } from '../store/action/contracts'\r\nimport * as dd from 'date-fns'\r\n\r\n\r\n\r\nconst Details = (props) => {\r\n\r\n\r\n  const getcontractName = (codeC) => {\r\n    var x = props.contractsList.find((item) => item.contractCode == codeC)\r\n    return x.contractName;\r\n\r\n  }\r\n  const getcontractValue = (codeC) => {\r\n    var x = props.contractToUserList.find((item) => item.userId == (props.currentUser.id).substring(0, 9) && item.contractCode == codeC)\r\n   \r\n    console.log(x);\r\n    //console.log(x.accumulatedAmount);\r\n    return x.accumulatedAmount;\r\n\r\n  }\r\n\r\n  const formatDate = (string) => {\r\n    var options = { year: 'numeric', month: 'numeric', day: 'numeric' };\r\n    return new Date(string).toLocaleDateString([], options);\r\n}\r\n\r\n  return (\r\n    <>\r\n      <h1>Details</h1>\r\n      <Form>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.firstName} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.lastName} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.email} />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} controlId=\"formGridProfile\">\r\n            <Form.Label>Profile</Form.Label>\r\n            <Form.Control disabled value={props.currentProfile.profileName} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control disabled value={props.currentUser.userName} />\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control value={props.currentUser.password} />\r\n          </Form.Group>\r\n        </Row>\r\n      </Form>\r\n\r\n      <h3>Your active contracts </h3>\r\n\r\n      \r\n        <ListGroup as=\"ol\" numbered >\r\n          {props.contractToUserList.map((row) =>\r\n            <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\">\r\n              <div className=\"ms-2 me-auto\">\r\n                <div className=\"fw-bold\">{getcontractName(row.contractCode)}</div>\r\n                {row.contractCode==1? getcontractValue(row.contractCode) : (formatDate(row.startDate) +' - ' + formatDate(row.endDate)) }\r\n              </div>\r\n             \r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n        <label></label>\r\n     \r\n    </>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n    currentProfile: state.profile.currentProfile,\r\n    contractToUserList: state.contractToUser.contractsToUser,\r\n    contractsList: state.contracts.travelContracts\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Details);\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travelsToUser.js",["198"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nexport const getTravelsToUser = (id) => {\r\n    return (dispatch) => {\r\n        \r\n        axios.get(`https://localhost:44321/api/travelsToUser/getAllTravelsToUser?id=${id}`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(saveTravelsToUser(response.data))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const saveTravelsToUser = (travelsToUserList) => {\r\n    return {\r\n        type: ActionTypes.TRAVELSTOUSER_SAVED,\r\n        payload: travelsToUserList\r\n    }\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travelsToUser.js",["199"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState={\r\n    travelsToUserList:[{}]\r\n}\r\n\r\nexport const travelsToUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.TRAVELSTOUSER_SAVED:\r\n            return { ...state, travelsToUserList: action.payload }\r\n        \r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\profile.js",["200","201"],"import * as ActionTypes from '../ActionTypes';\r\n\r\nconst initialState = {\r\n    currentProfile: {\r\n        profileCode:0,\r\n        profileName:''\r\n    },\r\n    profiles: [{}]\r\n}\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SAVE_PROFILE:\r\n            {\r\n                console.log(\"inside the case of save in the profileReducer\");\r\n                return { ...state, currentProfile: action.payload }\r\n\r\n            }\r\n         case ActionTypes.PROFILES_SAVE:\r\n                return { ...state, profiles: action.payload }     \r\n            return state;\r\n        }\r\n        return state;\r\n    }","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\profile.js",["202"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const getProfileName = (num) => {\r\n    \r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/profile/getProfileName?num=${num}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response == null) {\r\n                    swal(\"Oops...\", \"This profile is not exist in the system\", \"error\");\r\n                }\r\n                else {\r\n                    dispatch(saveProfile(response.data))\r\n                    \r\n                    \r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"inside the catch\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => {\r\n    return {\r\n        type: ActionTypes.SAVE_PROFILE,\r\n        payload: profile\r\n    }\r\n}\r\n\r\nexport const getAllProfiles = () => {\r\n    return (dispatch) => {\r\n        \r\n        axios.get(`https://localhost:44321/api/profile/getAllProfiles`).\r\n            then(response => {\r\n                console.log(response.data);\r\n                console.log(\"insisde then Profilesssssss\")\r\n                dispatch(saveProfiles(response.data))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                console.log(\"insisde catch profilessssss\")\r\n            })\r\n    }\r\n}\r\n\r\nexport const saveProfiles = (c) => {\r\n    return {\r\n        type: ActionTypes.PROFILES_SAVE,\r\n        payload: c\r\n    }\r\n}\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\fingerPrint.js",["203","204"],"import * as ActionTypes from '../ActionTypes';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nexport const ifThereIsSensor = () => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/fingerPrint/ifThereIsSensor`)\r\n            .then(response => {\r\n                if (response.data == true)\r\n                    swal(\"Yayyy\", \"there is sensor\", \"success\");\r\n                else\r\n                    swal(\"oops\", \"there isn't sensor\", \"error\")\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(\"inside the catch\");\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\travels.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\travels.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contracts.js",["205","206"],"import axios from \"axios\"\r\nimport * as ActionTypes from '../ActionTypes';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const getContracts = () => {\r\n    return (dispatch) => {\r\n        axios.get(`https://localhost:44321/api/contracts/getAllcontracts`).\r\n            then(response => {\r\n                console.log(response.data);\r\n                console.log(\"insisde then contractss\")\r\n                dispatch(savecontracts(response.data))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                console.log(\"insisde catch contractss\")\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const savecontracts = (c) => {\r\n    return {\r\n        type: ActionTypes.contractS_SAVED,\r\n        payload: c\r\n    }\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\action\\contractToUser.js",["207","208"],"import axios from \"axios\"\r\nimport * as ActionTypes from '../ActionTypes';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n// export const updateAccumulatedValue = (c, moneyToAdd) => {\r\n//     return (dispatch) => {\r\n//         axios.put(`https://localhost:44321/api/contractToUser/updatecontractToUser?c=${c}&moneyToAdd=${moneyToAdd}`)\r\n//             .\r\n//             then(response => {\r\n//                 console.log(response);\r\n//                 dispatch(update(response.data))\r\n//             })\r\n//             .catch(err => {\r\n//                 console.log(err);\r\n//             })\r\n//     }\r\n// }\r\nexport const addConsractToUser = (c, moneyToAdd = 0) => {\r\n    return (dispatch) => {\r\n\r\n        \r\n        axios.post(`https://localhost:44321/api/contractToUser/addcontractToUser?moneyToAdd=${moneyToAdd}`, c)\r\n            .then(res => {\r\n\r\n                console.log(\"1\", res.data)\r\n\r\n                dispatch(addContract(res.data));\r\n                console.log(\"2\", res.data)\r\n                swal(\"the contract added successfully\")\r\n                dispatch(getContractToUser(c.userId));\r\n                console.log(\"3\", res.data)\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                swal(\"Oops\", \"You don't need that contract, you have another active!\", \"warning\")\r\n                console.log(err);\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport const getContractToUser = (userId) => {\r\n    return (dispatch) => {\r\n        \r\n        axios.get(`https://localhost:44321/api/contractToUser/getContractsToUser?userId=${userId}`).\r\n            then(response => {\r\n                console.log(response.data);\r\n                dispatch(saveContractToUser(response.data))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// export const addContractToUser = (c) => {\r\n\r\n//     return (dispatch) => {\r\n//         axios.post(`https://localhost:44321/api/contractToUser/`, c)\r\n//             .then(response => {\r\n//                 console.log(response.data);\r\n//                 dispatch(addcontract(response.data));\r\n//                 swal(\"BARUCH HASHEM!\", \"your contract have added successfully\", \"success\");\r\n\r\n\r\n//             }\r\n//             )\r\n//             .catch(error => {\r\n//                 console.log(error);\r\n//             })\r\n//     }\r\n// }\r\n\r\n// export const update = (c) => {\r\n//     return {\r\n//         type: \"contract_UPDATE\",\r\n//         payload: c\r\n//     }\r\n// }\r\nexport const addContract = (c) => {\r\n    return {\r\n        type: \"CONTRACT_ADDED\",\r\n        payload: c\r\n    }\r\n}\r\nexport const saveContractToUser = (c) => {\r\n    return {\r\n        type: \"contract_TO_USER_SAVED\",\r\n        payload: c\r\n    }\r\n}\r\n\r\n// export const addConsractToUser = (c, moneyToAdd = 0) => {\r\n//     \r\n//     if (c.contractCode == 1) {\r\n//         return (dispatch) => {\r\n//             axios.get(`https://localhost:44321/api/contractToUser/ifExistStoredValue?userId=${c.userId}`).then(\r\n//                 response => {\r\n//                     \r\n//                     if (response.data == true) {\r\n//                         return (dispatch) => {\r\n//                             axios.put(`https://localhost:44321/api/contractToUser/updatecontractToUser?c=${c}&moneyToAdd=${moneyToAdd}`)\r\n//                                 .then(response => {\r\n//                                     \r\n//                                     swal(\"added money to stored value\");\r\n//                                 })\r\n//                         }\r\n//                     }\r\n//                     else {\r\n//                         return (dispatch) => {\r\n//                             axios.post(`https://localhost:44321/api/contractToUser/addcontractToUser?c=${c}&moneyToAdd=${moneyToAdd}`)\r\n//                                 .then(\r\n//                                     response => {\r\n//                                         debugger\r\n//                                         swal(\"added new stored value\");\r\n//                                     }\r\n//                                 )\r\n//                         }\r\n\r\n//                     }\r\n//                 }\r\n//             )\r\n//         }\r\n//     }\r\n//     else {\r\n//         return (dispatch) => {\r\n//             axios.get(`https://localhost:44321/api/contractToUser/ifExistAnycontract?userId=${c.userId}`).then(\r\n//                 response => {\r\n//                     if (response.data = true) {\r\n//                         swal(\"it's not possible to create multiple contract to user\")\r\n//                     }\r\n//                     else {\r\n//                         return (dispatch) => {\r\n//                             axios.post(`https://localhost:44321/api/contractToUser/addContractToUser?c=${c}`)\r\n//                                 .then(response => {\r\n//                                     swal(\"contract added successfully\");\r\n//                                 })\r\n//                         }\r\n\r\n//                     }\r\n//                 }\r\n//             )\r\n\r\n//         }\r\n//     }\r\n// }\r\n","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contracts.js",["209"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    travelContracts: [{}]\r\n\r\n}\r\n\r\n\r\nexport const contractsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.contractS_SAVED:\r\n            return { ...state, travelContracts: action.payload } \r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\store\\reducers\\contractToUser.js",["210"],"import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    contractsToUser: [{}],\r\n    \r\n\r\n}\r\n\r\nexport const contractToUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.contract_TO_USER_SAVED:\r\n            return { ...state, contractsToUser: action.payload }\r\n        case ActionTypes.contract_ADDED:\r\n            return {\r\n                ...state,\r\n                 contractsToUser: [...state.contractsToUser, action.payload]\r\n            }\r\n        case ActionTypes.contract_UPDATE:\r\n            let arr2 = state.contractsToUser.filter((item) => item.id !== action.payload.id);\r\n            arr2.push(action.payload)\r\n            console.log(arr2)\r\n            return {\r\n                ...state,\r\n                contractsToUser: arr2\r\n            }\r\n    }\r\n    return state;\r\n}","C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\windows_hello.js",[],"C:\\Users\\User\\Desktop\\final_project\\BioPayment\\src\\components\\aa.js",["211","212","213"],"import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\nimport Divider from '@mui/material/Divider';\r\n// import ArchiveIcon from '@mui/icons-material/Archive';\r\n// import FileCopyIcon from '@mui/icons-material/FileCopy';\r\n// import MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { connect, Connect } from 'react-redux';\r\nconst StyledMenu = styled((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    '& .MuiPaper-root': {\r\n        borderRadius: 6,\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 180,\r\n        color:\r\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n        boxShadow:\r\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n        '& .MuiMenu-list': {\r\n            padding: '4px 0',\r\n        },\r\n        '& .MuiMenuItem-root': {\r\n            '& .MuiSvgIcon-root': {\r\n                fontSize: 18,\r\n                color: theme.palette.text.secondary,\r\n                marginRight: theme.spacing(1.5),\r\n            },\r\n            '&:active': {\r\n                backgroundColor: alpha(\r\n                    theme.palette.primary.main,\r\n                    theme.palette.action.selectedOpacity,\r\n                ),\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilesList: state.profile.profiles\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function CustomizedMenus(props) {\r\n    const { profilesList } = props\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                id=\"demo-customized-button\"\r\n                aria-controls={open ? 'demo-customized-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                variant=\"contained\"\r\n                disableElevation\r\n                onClick={handleClick}\r\n            // endIcon={<KeyboardArrowDownIcon />}\r\n            >\r\n                Profils\r\n            </Button>\r\n            <StyledMenu\r\n                id=\"demo-customized-menu\"\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'demo-customized-button',\r\n                }}\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                {profilesList && profilesList.length && profilesList.map((item) => {\r\n                    <MenuItem onClick={handleClose} disableRipple>\r\n                        {/* <EditIcon /> */}\r\n                       {item.profileName}\r\n                    </MenuItem>\r\n                })}\r\n            </StyledMenu>\r\n        </div>\r\n    );\r\n})\r\n",{"ruleId":"214","severity":1,"message":"215","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":27},{"ruleId":"214","severity":1,"message":"218","line":12,"column":10,"nodeType":"216","messageId":"217","endLine":12,"endColumn":23},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"214","severity":1,"message":"223","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":12},{"ruleId":"214","severity":1,"message":"224","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":13},{"ruleId":"214","severity":1,"message":"225","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":16},{"ruleId":"214","severity":1,"message":"226","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":15},{"ruleId":"214","severity":1,"message":"227","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":20},{"ruleId":"214","severity":1,"message":"228","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":21},{"ruleId":"214","severity":1,"message":"229","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":23},{"ruleId":"214","severity":1,"message":"230","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"231","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":21},{"ruleId":"214","severity":1,"message":"232","line":14,"column":23,"nodeType":"216","messageId":"217","endLine":14,"endColumn":37},{"ruleId":"214","severity":1,"message":"233","line":16,"column":10,"nodeType":"216","messageId":"217","endLine":16,"endColumn":18},{"ruleId":"214","severity":1,"message":"234","line":43,"column":9,"nodeType":"216","messageId":"217","endLine":43,"endColumn":12},{"ruleId":"214","severity":1,"message":"235","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":16},{"ruleId":"214","severity":1,"message":"236","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":15},{"ruleId":"214","severity":1,"message":"237","line":38,"column":11,"nodeType":"216","messageId":"217","endLine":38,"endColumn":26},{"ruleId":"214","severity":1,"message":"238","line":86,"column":11,"nodeType":"216","messageId":"217","endLine":86,"endColumn":25},{"ruleId":"214","severity":1,"message":"239","line":90,"column":11,"nodeType":"216","messageId":"217","endLine":90,"endColumn":28},{"ruleId":"214","severity":1,"message":"240","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"230","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"241","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":19},{"ruleId":"214","severity":1,"message":"242","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":27,"column":30,"nodeType":"245","messageId":"246","endLine":27,"endColumn":32},{"ruleId":"243","severity":1,"message":"247","line":56,"column":31,"nodeType":"245","messageId":"246","endLine":56,"endColumn":33},{"ruleId":"243","severity":1,"message":"247","line":57,"column":31,"nodeType":"245","messageId":"246","endLine":57,"endColumn":33},{"ruleId":"243","severity":1,"message":"247","line":58,"column":31,"nodeType":"245","messageId":"246","endLine":58,"endColumn":33},{"ruleId":"243","severity":1,"message":"247","line":59,"column":31,"nodeType":"245","messageId":"246","endLine":59,"endColumn":33},{"ruleId":"248","severity":1,"message":"249","line":112,"column":1,"nodeType":"250","messageId":"251","endLine":129,"endColumn":12},{"ruleId":"214","severity":1,"message":"252","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":12},{"ruleId":"253","severity":1,"message":"254","line":23,"column":5,"nodeType":"255","messageId":"256","endLine":45,"endColumn":6},{"ruleId":"214","severity":1,"message":"257","line":8,"column":9,"nodeType":"216","messageId":"217","endLine":8,"endColumn":23},{"ruleId":"243","severity":1,"message":"247","line":34,"column":60,"nodeType":"245","messageId":"246","endLine":34,"endColumn":62},{"ruleId":"258","severity":1,"message":"259","line":65,"column":71,"nodeType":"260","messageId":"261","endLine":65,"endColumn":72,"fix":"262"},{"ruleId":"214","severity":1,"message":"240","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":18},{"ruleId":"214","severity":1,"message":"263","line":37,"column":11,"nodeType":"216","messageId":"217","endLine":37,"endColumn":27},{"ruleId":"243","severity":1,"message":"247","line":39,"column":33,"nodeType":"245","messageId":"246","endLine":39,"endColumn":35},{"ruleId":"214","severity":1,"message":"264","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":16},{"ruleId":"214","severity":1,"message":"265","line":1,"column":31,"nodeType":"216","messageId":"217","endLine":1,"endColumn":38},{"ruleId":"214","severity":1,"message":"266","line":1,"column":53,"nodeType":"216","messageId":"217","endLine":1,"endColumn":61},{"ruleId":"214","severity":1,"message":"230","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"267","line":1,"column":38,"nodeType":"216","messageId":"217","endLine":1,"endColumn":47},{"ruleId":"214","severity":1,"message":"268","line":1,"column":49,"nodeType":"216","messageId":"217","endLine":1,"endColumn":55},{"ruleId":"214","severity":1,"message":"269","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":11},{"ruleId":"214","severity":1,"message":"270","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":18},{"ruleId":"214","severity":1,"message":"266","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":16},{"ruleId":"214","severity":1,"message":"271","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":14},{"ruleId":"214","severity":1,"message":"272","line":13,"column":10,"nodeType":"216","messageId":"217","endLine":13,"endColumn":18},{"ruleId":"214","severity":1,"message":"273","line":13,"column":20,"nodeType":"216","messageId":"217","endLine":13,"endColumn":24},{"ruleId":"214","severity":1,"message":"274","line":13,"column":26,"nodeType":"216","messageId":"217","endLine":13,"endColumn":33},{"ruleId":"214","severity":1,"message":"275","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":17},{"ruleId":"214","severity":1,"message":"276","line":36,"column":9,"nodeType":"216","messageId":"217","endLine":36,"endColumn":28},{"ruleId":"214","severity":1,"message":"240","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"230","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"264","line":3,"column":26,"nodeType":"216","messageId":"217","endLine":3,"endColumn":32},{"ruleId":"214","severity":1,"message":"277","line":3,"column":45,"nodeType":"216","messageId":"217","endLine":3,"endColumn":58},{"ruleId":"214","severity":1,"message":"278","line":3,"column":60,"nodeType":"216","messageId":"217","endLine":3,"endColumn":65},{"ruleId":"214","severity":1,"message":"279","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":24},{"ruleId":"214","severity":1,"message":"280","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":27},{"ruleId":"214","severity":1,"message":"281","line":8,"column":10,"nodeType":"216","messageId":"217","endLine":8,"endColumn":22},{"ruleId":"214","severity":1,"message":"282","line":9,"column":13,"nodeType":"216","messageId":"217","endLine":9,"endColumn":15},{"ruleId":"243","severity":1,"message":"247","line":17,"column":66,"nodeType":"245","messageId":"246","endLine":17,"endColumn":68},{"ruleId":"243","severity":1,"message":"247","line":22,"column":65,"nodeType":"245","messageId":"246","endLine":22,"endColumn":67},{"ruleId":"243","severity":1,"message":"247","line":22,"column":128,"nodeType":"245","messageId":"246","endLine":22,"endColumn":130},{"ruleId":"243","severity":1,"message":"247","line":81,"column":34,"nodeType":"245","messageId":"246","endLine":81,"endColumn":36},{"ruleId":"214","severity":1,"message":"252","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":12},{"ruleId":"253","severity":1,"message":"254","line":9,"column":5,"nodeType":"255","messageId":"256","endLine":13,"endColumn":6},{"ruleId":"253","severity":1,"message":"254","line":11,"column":5,"nodeType":"255","messageId":"256","endLine":21,"endColumn":10},{"ruleId":"283","severity":1,"message":"284","line":20,"column":13,"nodeType":"285","messageId":"286","endLine":20,"endColumn":26},{"ruleId":"258","severity":1,"message":"259","line":39,"column":72,"nodeType":"260","messageId":"261","endLine":39,"endColumn":73,"fix":"287"},{"ruleId":"214","severity":1,"message":"288","line":1,"column":13,"nodeType":"216","messageId":"217","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"247","line":9,"column":35,"nodeType":"245","messageId":"246","endLine":9,"endColumn":37},{"ruleId":"214","severity":1,"message":"252","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":12},{"ruleId":"258","severity":1,"message":"259","line":8,"column":75,"nodeType":"260","messageId":"261","endLine":8,"endColumn":76,"fix":"289"},{"ruleId":"214","severity":1,"message":"288","line":2,"column":13,"nodeType":"216","messageId":"217","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"259","line":47,"column":100,"nodeType":"260","messageId":"261","endLine":47,"endColumn":101,"fix":"290"},{"ruleId":"253","severity":1,"message":"254","line":11,"column":5,"nodeType":"255","messageId":"256","endLine":14,"endColumn":6},{"ruleId":"253","severity":1,"message":"254","line":11,"column":5,"nodeType":"255","messageId":"256","endLine":27,"endColumn":6},{"ruleId":"214","severity":1,"message":"291","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":15},{"ruleId":"214","severity":1,"message":"292","line":12,"column":19,"nodeType":"216","messageId":"217","endLine":12,"endColumn":26},{"ruleId":"293","severity":1,"message":"294","line":95,"column":81,"nodeType":"295","messageId":"296","endLine":95,"endColumn":83},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["297"],"no-negated-in-lhs",["298"],"'logo' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Loading' is defined but never used.","'TravelToUser' is defined but never used.","'Windows_hello' is defined but never used.","'CustomizedMenus' is defined but never used.","'Component' is defined but never used.","'fingerPrint' is assigned a value but never used.","'setFingerPrint' is assigned a value but never used.","'goodUser' is assigned a value but never used.","'log' is assigned a value but never used.","'Checkbox' is defined but never used.","'isEmail' is defined but never used.","'inputRefProfile' is assigned a value but never used.","'updateIsDriver' is assigned a value but never used.","'updateFingerPrint' is assigned a value but never used.","'useState' is defined but never used.","'ListGroup' is defined but never used.","'moment' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'swal' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getTravelsList' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"299","text":"300"},"'findTravelByCode' is assigned a value but never used.","'Button' is defined but never used.","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Box' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'ComboBox' is defined but never used.","'Item' is defined but never used.","'Section' is defined but never used.","'FormLabel' is defined but never used.","'inputRefProfileCode' is assigned a value but never used.","'ListGroupItem' is defined but never used.","'Badge' is defined but never used.","'getProfileName' is defined but never used.","'getcontractToUser' is defined but never used.","'getcontracts' is defined but never used.","'dd' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",{"range":"301","text":"300"},"'ActionTypes' is defined but never used.",{"range":"302","text":"300"},{"range":"303","text":"300"},"'Divider' is defined but never used.","'Connect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",[2244,2259],"\r\n            .",[1088,1103],[250,265],[1546,1561]]